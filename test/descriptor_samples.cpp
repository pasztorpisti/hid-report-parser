// The descriptor comments were generated by: https://eleccelerator.com/usbdescreqparser/
// The linked parser seems to have a few bugs. For example:
// - It parses REPORT_COUNT as a signed integer. e.g.: 0xE8 -> -24
// - Sometimes it shows an incorrect decimal value in case of large unsigned
//   16- and 32-bit values, e.g.: 0xFFFF -> 65534

#include "descriptor_samples.h"


namespace hid {
namespace descriptor_samples {


namespace mouse {

	const uint8_t ZOWIE_FK2[69] = {
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x02,        // Usage (Mouse)
		0xA1, 0x01,        // Collection (Application)
		0x09, 0x01,        //   Usage (Pointer)
		0xA1, 0x00,        //   Collection (Physical)
		0x05, 0x09,        //     Usage Page (Button)
		0x19, 0x01,        //     Usage Minimum (0x01)
		0x29, 0x06,        //     Usage Maximum (0x06)
		0x15, 0x00,        //     Logical Minimum (0)
		0x25, 0x01,        //     Logical Maximum (1)
		0x95, 0x06,        //     Report Count (6)
		0x75, 0x01,        //     Report Size (1)
		0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x95, 0x02,        //     Report Count (2)
		0x75, 0x01,        //     Report Size (1)
		0x81, 0x01,        //     Input (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x05, 0x01,        //     Usage Page (Generic Desktop Ctrls)
		0x09, 0x30,        //     Usage (X)
		0x09, 0x31,        //     Usage (Y)
		0x16, 0x01, 0x80,  //     Logical Minimum (-32767)
		0x26, 0xFF, 0x7F,  //     Logical Maximum (32767)
		0x75, 0x10,        //     Report Size (16)
		0x95, 0x02,        //     Report Count (2)
		0x81, 0x06,        //     Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              //   End Collection                        <- unneeded
		0xA1, 0x00,        //   Collection (Physical)                 <- unneeded
		0x95, 0x01,        //     Report Count (1)
		0x75, 0x08,        //     Report Size (8)
		0x05, 0x01,        //     Usage Page (Generic Desktop Ctrls)  <- unneeded
		0x09, 0x38,        //     Usage (Wheel)
		0x15, 0x81,        //     Logical Minimum (-127)
		0x25, 0x7F,        //     Logical Maximum (127)
		0x81, 0x06,        //     Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              //   End Collection
		0xC0,              // End Collection
	};


	const uint8_t RAZER_VIPER_ULTIMATE_1[94] = {
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x02,        // Usage (Mouse)
		0xA1, 0x01,        // Collection (Application)
		0x09, 0x01,        //   Usage (Pointer)
		0xA1, 0x00,        //   Collection (Physical)
		0x05, 0x09,        //     Usage Page (Button)
		0x19, 0x01,        //     Usage Minimum (0x01)
		0x29, 0x05,        //     Usage Maximum (0x05)
		0x15, 0x00,        //     Logical Minimum (0)
		0x25, 0x01,        //     Logical Maximum (1)
		0x75, 0x01,        //     Report Size (1)
		0x95, 0x05,        //     Report Count (5)
		0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x75, 0x01,        //     Report Size (1)
		0x95, 0x03,        //     Report Count (3)
		0x81, 0x03,        //     Input (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x06, 0x00, 0xFF,  //     Usage Page (Vendor Defined 0xFF00)
		0x09, 0x40,        //     Usage (0x40)
		0x75, 0x08,        //     Report Size (8)
		0x95, 0x02,        //     Report Count (2)
		0x15, 0x81,        //     Logical Minimum (-127)
		0x25, 0x7F,        //     Logical Maximum (127)
		0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x05, 0x01,        //     Usage Page (Generic Desktop Ctrls)
		0x09, 0x38,        //     Usage (Wheel)
		0x15, 0x81,        //     Logical Minimum (-127)
		0x25, 0x7F,        //     Logical Maximum (127)
		0x75, 0x08,        //     Report Size (8)
		0x95, 0x01,        //     Report Count (1)
		0x81, 0x06,        //     Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0x09, 0x30,        //     Usage (X)
		0x09, 0x31,        //     Usage (Y)
		0x16, 0x00, 0x80,  //     Logical Minimum (-32768)
		0x26, 0xFF, 0x7F,  //     Logical Maximum (32767)
		0x75, 0x10,        //     Report Size (16)
		0x95, 0x02,        //     Report Count (2)
		0x81, 0x06,        //     Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              //   End Collection
		0x06, 0x00, 0xFF,  //   Usage Page (Vendor Defined 0xFF00)
		0x09, 0x02,        //   Usage (0x02)
		0x15, 0x00,        //   Logical Minimum (0)
		0x25, 0x01,        //   Logical Maximum (1)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x5A,        //   Report Count (90)
		0xB1, 0x01,        //   Feature (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0xC0,              // End Collection
	};


	const uint8_t RAZER_VIPER_ULTIMATE_2[159] = {
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x06,        // Usage (Keyboard)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x01,        //   Report ID (1)
		0x05, 0x07,        //   Usage Page (Kbrd/Keypad)
		0x19, 0xE0,        //   Usage Minimum (0xE0)
		0x29, 0xE7,        //   Usage Maximum (0xE7)
		0x15, 0x00,        //   Logical Minimum (0)
		0x25, 0x01,        //   Logical Maximum (1)
		0x75, 0x01,        //   Report Size (1)
		0x95, 0x08,        //   Report Count (8)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x19, 0x00,        //   Usage Minimum (0x00)
		0x2A, 0xFF, 0x00,  //   Usage Maximum (0xFF)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x0E,        //   Report Count (14)
		0x81, 0x00,        //   Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
		0x05, 0x0C,        // Usage Page (Consumer)
		0x09, 0x01,        // Usage (Consumer Control)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x02,        //   Report ID (2)
		0x19, 0x00,        //   Usage Minimum (Unassigned)
		0x2A, 0x3C, 0x02,  //   Usage Maximum (AC Format)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0x3C, 0x02,  //   Logical Maximum (572)
		0x95, 0x01,        //   Report Count (1)
		0x75, 0x10,        //   Report Size (16)
		0x81, 0x00,        //   Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x0D,        //   Report Count (13)
		0x81, 0x01,        //   Input (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x80,        // Usage (Sys Control)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x03,        //   Report ID (3)
		0x19, 0x81,        //   Usage Minimum (Sys Power Down)
		0x29, 0x83,        //   Usage Maximum (Sys Wake Up)
		0x15, 0x00,        //   Logical Minimum (0)
		0x25, 0x01,        //   Logical Maximum (1)
		0x75, 0x01,        //   Report Size (1)
		0x95, 0x03,        //   Report Count (3)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x95, 0x05,        //   Report Count (5)
		0x81, 0x01,        //   Input (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x0E,        //   Report Count (14)
		0x81, 0x01,        //   Input (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x00,        // Usage (Undefined)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x04,        //   Report ID (4)
		0x09, 0x03,        //   Usage (0x03)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x35, 0x00,        //   Physical Minimum (0)
		0x46, 0xFF, 0x00,  //   Physical Maximum (255)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x0F,        //   Report Count (15)
		0x81, 0x00,        //   Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x00,        // Usage (Undefined)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x05,        //   Report ID (5)
		0x09, 0x03,        //   Usage (0x03)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x35, 0x00,        //   Physical Minimum (0)
		0x46, 0xFF, 0x00,  //   Physical Maximum (255)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x0F,        //   Report Count (15)
		0x81, 0x00,        //   Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
	};


	const uint8_t RAZER_VIPER_ULTIMATE_3[61] = {
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x06,        // Usage (Keyboard)
		0xA1, 0x01,        // Collection (Application)
		0x05, 0x07,        //   Usage Page (Kbrd/Keypad)
		0x19, 0xE0,        //   Usage Minimum (0xE0)
		0x29, 0xE7,        //   Usage Maximum (0xE7)
		0x15, 0x00,        //   Logical Minimum (0)
		0x25, 0x01,        //   Logical Maximum (1)
		0x75, 0x01,        //   Report Size (1)
		0x95, 0x08,        //   Report Count (8)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x81, 0x01,        //   Input (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x19, 0x00,        //   Usage Minimum (0x00)
		0x2A, 0xFF, 0x00,  //   Usage Maximum (0xFF)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x06,        //   Report Count (6)
		0x81, 0x00,        //   Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x05, 0x08,        //   Usage Page (LEDs)
		0x19, 0x01,        //   Usage Minimum (Num Lock)
		0x29, 0x03,        //   Usage Maximum (Scroll Lock)
		0x15, 0x00,        //   Logical Minimum (0)
		0x25, 0x01,        //   Logical Maximum (1)
		0x75, 0x01,        //   Report Size (1)
		0x95, 0x03,        //   Report Count (3)
		0x91, 0x02,        //   Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x95, 0x05,        //   Report Count (5)
		0x91, 0x01,        //   Output (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0xC0,              // End Collection
	};


	const uint8_t RAZER_PRO_CLICK_MINI_1[103] = {
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x02,        // Usage (Mouse)
		0xA1, 0x01,        // Collection (Application)
		0x09, 0x01,        //   Usage (Pointer)
		0xA1, 0x00,        //   Collection (Physical)
		0x05, 0x09,        //     Usage Page (Button)
		0x19, 0x01,        //     Usage Minimum (0x01)
		0x29, 0x05,        //     Usage Maximum (0x05)
		0x15, 0x00,        //     Logical Minimum (0)
		0x25, 0x01,        //     Logical Maximum (1)
		0x75, 0x01,        //     Report Size (1)
		0x95, 0x05,        //     Report Count (5)
		0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x75, 0x01,        //     Report Size (1)
		0x95, 0x03,        //     Report Count (3)
		0x81, 0x03,        //     Input (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x06, 0x00, 0xFF,  //     Usage Page (Vendor Defined 0xFF00)
		0x75, 0x08,        //     Report Size (8)
		0x95, 0x01,        //     Report Count (1)
		0x81, 0x03,        //     Input (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x05, 0x0C,        //     Usage Page (Consumer)
		0x0A, 0x38, 0x02,  //     Usage (AC Pan)
		0x15, 0x81,        //     Logical Minimum (-127)
		0x25, 0x7F,        //     Logical Maximum (127)
		0x75, 0x08,        //     Report Size (8)
		0x95, 0x01,        //     Report Count (1)
		0x81, 0x06,        //     Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0x05, 0x01,        //     Usage Page (Generic Desktop Ctrls)
		0x09, 0x38,        //     Usage (Wheel)
		0x15, 0x81,        //     Logical Minimum (-127)
		0x25, 0x7F,        //     Logical Maximum (127)
		0x75, 0x08,        //     Report Size (8)
		0x95, 0x01,        //     Report Count (1)
		0x81, 0x06,        //     Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0x09, 0x30,        //     Usage (X)
		0x09, 0x31,        //     Usage (Y)
		0x16, 0x00, 0x80,  //     Logical Minimum (-32768)
		0x26, 0xFF, 0x7F,  //     Logical Maximum (32767)
		0x75, 0x10,        //     Report Size (16)
		0x95, 0x02,        //     Report Count (2)
		0x81, 0x06,        //     Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              //   End Collection
		0x06, 0x00, 0xFF,  //   Usage Page (Vendor Defined 0xFF00)
		0x09, 0x02,        //   Usage (0x02)
		0x15, 0x00,        //   Logical Minimum (0)
		0x25, 0x01,        //   Logical Maximum (1)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x5A,        //   Report Count (90)
		0xB1, 0x01,        //   Feature (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0xC0,              // End Collection
	};


	const uint8_t RAZER_PRO_CLICK_MINI_2[314] = {
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x06,        // Usage (Keyboard)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x01,        //   Report ID (1)
		0x05, 0x07,        //   Usage Page (Kbrd/Keypad)
		0x19, 0xE0,        //   Usage Minimum (0xE0)
		0x29, 0xE7,        //   Usage Maximum (0xE7)
		0x15, 0x00,        //   Logical Minimum (0)
		0x25, 0x01,        //   Logical Maximum (1)
		0x75, 0x01,        //   Report Size (1)
		0x95, 0x08,        //   Report Count (8)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x19, 0x00,        //   Usage Minimum (0x00)
		0x2A, 0xFF, 0x00,  //   Usage Maximum (0xFF)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x0E,        //   Report Count (14)
		0x81, 0x00,        //   Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x05, 0x08,        //   Usage Page (LEDs)
		0x19, 0x01,        //   Usage Minimum (Num Lock)
		0x29, 0x03,        //   Usage Maximum (Scroll Lock)
		0x15, 0x00,        //   Logical Minimum (0)
		0x25, 0x01,        //   Logical Maximum (1)
		0x75, 0x01,        //   Report Size (1)
		0x95, 0x03,        //   Report Count (3)
		0x91, 0x02,        //   Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x95, 0x05,        //   Report Count (5)
		0x91, 0x01,        //   Output (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0xC0,              // End Collection
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x02,        // Usage (Mouse)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x0A,        //   Report ID (10)
		0x09, 0x01,        //   Usage (Pointer)
		0xA1, 0x00,        //   Collection (Physical)
		0x05, 0x09,        //     Usage Page (Button)
		0x19, 0x01,        //     Usage Minimum (0x01)
		0x29, 0x06,        //     Usage Maximum (0x06)
		0x15, 0x00,        //     Logical Minimum (0)
		0x25, 0x01,        //     Logical Maximum (1)
		0x75, 0x01,        //     Report Size (1)
		0x95, 0x06,        //     Report Count (6)
		0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x75, 0x01,        //     Report Size (1)
		0x95, 0x02,        //     Report Count (2)
		0x81, 0x03,        //     Input (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x06, 0x00, 0xFF,  //     Usage Page (Vendor Defined 0xFF00)
		0x09, 0x40,        //     Usage (0x40)
		0x75, 0x08,        //     Report Size (8)
		0x95, 0x02,        //     Report Count (2)
		0x15, 0x81,        //     Logical Minimum (-127)
		0x25, 0x7F,        //     Logical Maximum (127)
		0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x05, 0x01,        //     Usage Page (Generic Desktop Ctrls)
		0x09, 0x38,        //     Usage (Wheel)
		0x15, 0x81,        //     Logical Minimum (-127)
		0x25, 0x7F,        //     Logical Maximum (127)
		0x75, 0x08,        //     Report Size (8)
		0x95, 0x01,        //     Report Count (1)
		0x81, 0x06,        //     Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0x09, 0x30,        //     Usage (X)
		0x09, 0x31,        //     Usage (Y)
		0x16, 0x00, 0x80,  //     Logical Minimum (-32768)
		0x26, 0xFF, 0x7F,  //     Logical Maximum (32767)
		0x75, 0x10,        //     Report Size (16)
		0x95, 0x02,        //     Report Count (2)
		0x81, 0x06,        //     Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              //   End Collection
		0xC0,              // End Collection
		0x05, 0x0C,        // Usage Page (Consumer)
		0x09, 0x01,        // Usage (Consumer Control)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x02,        //   Report ID (2)
		0x19, 0x00,        //   Usage Minimum (Unassigned)
		0x2A, 0x3C, 0x02,  //   Usage Maximum (AC Format)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0x3C, 0x02,  //   Logical Maximum (572)
		0x95, 0x01,        //   Report Count (1)
		0x75, 0x10,        //   Report Size (16)
		0x81, 0x00,        //   Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x0D,        //   Report Count (13)
		0x81, 0x01,        //   Input (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x80,        // Usage (Sys Control)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x03,        //   Report ID (3)
		0x19, 0x81,        //   Usage Minimum (Sys Power Down)
		0x29, 0x83,        //   Usage Maximum (Sys Wake Up)
		0x15, 0x00,        //   Logical Minimum (0)
		0x25, 0x01,        //   Logical Maximum (1)
		0x75, 0x01,        //   Report Size (1)
		0x95, 0x03,        //   Report Count (3)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x95, 0x05,        //   Report Count (5)
		0x81, 0x01,        //   Input (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x0E,        //   Report Count (14)
		0x81, 0x01,        //   Input (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x00,        // Usage (Undefined)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x04,        //   Report ID (4)
		0x09, 0x03,        //   Usage (0x03)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x35, 0x00,        //   Physical Minimum (0)
		0x46, 0xFF, 0x00,  //   Physical Maximum (255)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x0F,        //   Report Count (15)
		0x81, 0x00,        //   Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x00,        // Usage (Undefined)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x05,        //   Report ID (5)
		0x09, 0x03,        //   Usage (0x03)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x35, 0x00,        //   Physical Minimum (0)
		0x46, 0xFF, 0x00,  //   Physical Maximum (255)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x0F,        //   Report Count (15)
		0x81, 0x00,        //   Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x00,        // Usage (Undefined)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x08,        //   Report ID (8)
		0x09, 0x03,        //   Usage (0x03)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x35, 0x00,        //   Physical Minimum (0)
		0x46, 0xFF, 0x00,  //   Physical Maximum (255)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x0F,        //   Report Count (15)
		0x81, 0x00,        //   Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x00,        // Usage (Undefined)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x09,        //   Report ID (9)
		0x09, 0x03,        //   Usage (0x03)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x35, 0x00,        //   Physical Minimum (0)
		0x46, 0xFF, 0x00,  //   Physical Maximum (255)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x0F,        //   Report Count (15)
		0x81, 0x00,        //   Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
	};


	const uint8_t RAZER_PRO_CLICK_MINI_3[61] = {
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x06,        // Usage (Keyboard)
		0xA1, 0x01,        // Collection (Application)
		0x05, 0x07,        //   Usage Page (Kbrd/Keypad)
		0x19, 0xE0,        //   Usage Minimum (0xE0)
		0x29, 0xE7,        //   Usage Maximum (0xE7)
		0x15, 0x00,        //   Logical Minimum (0)
		0x25, 0x01,        //   Logical Maximum (1)
		0x75, 0x01,        //   Report Size (1)
		0x95, 0x08,        //   Report Count (8)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x81, 0x01,        //   Input (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x19, 0x00,        //   Usage Minimum (0x00)
		0x2A, 0xFF, 0x00,  //   Usage Maximum (0xFF)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x06,        //   Report Count (6)
		0x81, 0x00,        //   Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x05, 0x08,        //   Usage Page (LEDs)
		0x19, 0x01,        //   Usage Minimum (Num Lock)
		0x29, 0x03,        //   Usage Maximum (Scroll Lock)
		0x15, 0x00,        //   Logical Minimum (0)
		0x25, 0x01,        //   Logical Maximum (1)
		0x75, 0x01,        //   Report Size (1)
		0x95, 0x03,        //   Report Count (3)
		0x91, 0x02,        //   Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x95, 0x05,        //   Report Count (5)
		0x91, 0x01,        //   Output (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0xC0,              // End Collection
	};


	const uint8_t RAZER_PRO_CLICK_MINI_4[348] = {
		0x05, 0x59,        // Usage Page (0x59)
		0x09, 0x01,        // Usage (0x01)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x01,        //   Report ID (1)
		0x09, 0x02,        //   Usage (0x02)
		0xA1, 0x02,        //   Collection (Logical)
		0x09, 0x03,        //     Usage (0x03)
		0x15, 0x00,        //     Logical Minimum (0)
		0x27, 0xFF, 0xFF, 0x00, 0x00,  //     Logical Maximum (65534)
		0x75, 0x10,        //     Report Size (16)
		0x95, 0x01,        //     Report Count (1)
		0xB1, 0x03,        //     Feature (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x09, 0x04,        //     Usage (0x04)
		0x09, 0x05,        //     Usage (0x05)
		0x09, 0x06,        //     Usage (0x06)
		0x09, 0x07,        //     Usage (0x07)
		0x09, 0x08,        //     Usage (0x08)
		0x15, 0x00,        //     Logical Minimum (0)
		0x27, 0xFF, 0xFF, 0xFF, 0x7F,  //     Logical Maximum (2147483646)
		0x75, 0x20,        //     Report Size (32)
		0x95, 0x05,        //     Report Count (5)
		0xB1, 0x03,        //     Feature (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0xC0,              //   End Collection
		0x85, 0x02,        //   Report ID (2)
		0x09, 0x20,        //   Usage (0x20)
		0xA1, 0x02,        //   Collection (Logical)
		0x09, 0x21,        //     Usage (0x21)
		0x15, 0x00,        //     Logical Minimum (0)
		0x27, 0xFF, 0xFF, 0x00, 0x00,  //     Logical Maximum (65534)
		0x75, 0x10,        //     Report Size (16)
		0x95, 0x01,        //     Report Count (1)
		0xB1, 0x02,        //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0xC0,              //   End Collection
		0x85, 0x03,        //   Report ID (3)
		0x09, 0x22,        //   Usage (0x22)
		0xA1, 0x02,        //   Collection (Logical)
		0x09, 0x21,        //     Usage (0x21)
		0x15, 0x00,        //     Logical Minimum (0)
		0x27, 0xFF, 0xFF, 0x00, 0x00,  //     Logical Maximum (65534)
		0x75, 0x10,        //     Report Size (16)
		0x95, 0x01,        //     Report Count (1)
		0xB1, 0x02,        //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x09, 0x23,        //     Usage (0x23)
		0x09, 0x24,        //     Usage (0x24)
		0x09, 0x25,        //     Usage (0x25)
		0x09, 0x27,        //     Usage (0x27)
		0x09, 0x26,        //     Usage (0x26)
		0x15, 0x00,        //     Logical Minimum (0)
		0x27, 0xFF, 0xFF, 0xFF, 0x7F,  //     Logical Maximum (2147483646)
		0x75, 0x20,        //     Report Size (32)
		0x95, 0x05,        //     Report Count (5)
		0xB1, 0x02,        //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x09, 0x28,        //     Usage (0x28)
		0x09, 0x29,        //     Usage (0x29)
		0x09, 0x2A,        //     Usage (0x2A)
		0x09, 0x2C,        //     Usage (0x2C)
		0x09, 0x2D,        //     Usage (0x2D)
		0x15, 0x00,        //     Logical Minimum (0)
		0x26, 0xFF, 0x00,  //     Logical Maximum (255)
		0x75, 0x08,        //     Report Size (8)
		0x95, 0x05,        //     Report Count (5)
		0xB1, 0x02,        //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0xC0,              //   End Collection
		0x85, 0x04,        //   Report ID (4)
		0x09, 0x50,        //   Usage (0x50)
		0xA1, 0x02,        //   Collection (Logical)
		0x09, 0x03,        //     Usage (0x03)
		0x09, 0x55,        //     Usage (0x55)
		0x15, 0x00,        //     Logical Minimum (0)
		0x25, 0x08,        //     Logical Maximum (8)
		0x75, 0x08,        //     Report Size (8)
		0x95, 0x02,        //     Report Count (2)
		0xB1, 0x02,        //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x09, 0x21,        //     Usage (0x21)
		0x15, 0x00,        //     Logical Minimum (0)
		0x27, 0xFF, 0xFF, 0x00, 0x00,  //     Logical Maximum (65534)
		0x75, 0x10,        //     Report Size (16)
		0x95, 0x08,        //     Report Count (8)
		0xB1, 0x02,        //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x09, 0x51,        //     Usage (0x51)
		0x09, 0x52,        //     Usage (0x52)
		0x09, 0x53,        //     Usage (0x53)
		0x09, 0x51,        //     Usage (0x51)
		0x09, 0x52,        //     Usage (0x52)
		0x09, 0x53,        //     Usage (0x53)
		0x09, 0x51,        //     Usage (0x51)
		0x09, 0x52,        //     Usage (0x52)
		0x09, 0x53,        //     Usage (0x53)
		0x09, 0x51,        //     Usage (0x51)
		0x09, 0x52,        //     Usage (0x52)
		0x09, 0x53,        //     Usage (0x53)
		0x09, 0x51,        //     Usage (0x51)
		0x09, 0x52,        //     Usage (0x52)
		0x09, 0x53,        //     Usage (0x53)
		0x09, 0x51,        //     Usage (0x51)
		0x09, 0x52,        //     Usage (0x52)
		0x09, 0x53,        //     Usage (0x53)
		0x09, 0x51,        //     Usage (0x51)
		0x09, 0x52,        //     Usage (0x52)
		0x09, 0x53,        //     Usage (0x53)
		0x09, 0x51,        //     Usage (0x51)
		0x09, 0x52,        //     Usage (0x52)
		0x09, 0x53,        //     Usage (0x53)
		0x15, 0x00,        //     Logical Minimum (0)
		0x26, 0xFF, 0x00,  //     Logical Maximum (255)
		0x75, 0x08,        //     Report Size (8)
		0x95, 0x18,        //     Report Count (24)
		0xB1, 0x02,        //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0xC0,              //   End Collection
		0x85, 0x05,        //   Report ID (5)
		0x09, 0x60,        //   Usage (0x60)
		0xA1, 0x02,        //   Collection (Logical)
		0x09, 0x55,        //     Usage (0x55)
		0x15, 0x00,        //     Logical Minimum (0)
		0x25, 0x08,        //     Logical Maximum (8)
		0x75, 0x08,        //     Report Size (8)
		0x95, 0x01,        //     Report Count (1)
		0xB1, 0x02,        //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x09, 0x61,        //     Usage (0x61)
		0x09, 0x62,        //     Usage (0x62)
		0x15, 0x00,        //     Logical Minimum (0)
		0x27, 0xFF, 0xFF, 0x00, 0x00,  //     Logical Maximum (65534)
		0x75, 0x10,        //     Report Size (16)
		0x95, 0x02,        //     Report Count (2)
		0xB1, 0x02,        //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x09, 0x51,        //     Usage (0x51)
		0x09, 0x52,        //     Usage (0x52)
		0x09, 0x53,        //     Usage (0x53)
		0x15, 0x00,        //     Logical Minimum (0)
		0x26, 0xFF, 0x00,  //     Logical Maximum (255)
		0x75, 0x08,        //     Report Size (8)
		0x95, 0x03,        //     Report Count (3)
		0xB1, 0x02,        //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0xC0,              //   End Collection
		0x85, 0x06,        //   Report ID (6)
		0x09, 0x70,        //   Usage (0x70)
		0xA1, 0x02,        //   Collection (Logical)
		0x09, 0x71,        //     Usage (0x71)
		0x15, 0x00,        //     Logical Minimum (0)
		0x25, 0x01,        //     Logical Maximum (1)
		0x75, 0x08,        //     Report Size (8)
		0x95, 0x01,        //     Report Count (1)
		0xB1, 0x02,        //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0xC0,              //   End Collection
		0x85, 0x07,        //   Report ID (7)
		0x06, 0x00, 0xFF,  //   Usage Page (Vendor Defined 0xFF00)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x09, 0x02,        //   Usage (0x02)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x3F,        //   Report Count (63)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0xC0,              // End Collection
		0x05, 0x0C,        // Usage Page (Consumer)
		0x09, 0x01,        // Usage (Consumer Control)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x08,        //   Report ID (8)
		0x19, 0xD0,        //   Usage Minimum (0xD0)
		0x29, 0xD7,        //   Usage Maximum (0xD7)
		0x15, 0x00,        //   Logical Minimum (0)
		0x25, 0x01,        //   Logical Maximum (1)
		0x75, 0x01,        //   Report Size (1)
		0x95, 0x08,        //   Report Count (8)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
	};


	const uint8_t RAZER_PRO_CLICK_MINI_5[325] = {
		0x05, 0x59,        // Usage Page (0x59)
		0x09, 0x01,        // Usage (0x01)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x01,        //   Report ID (1)
		0x09, 0x02,        //   Usage (0x02)
		0xA1, 0x02,        //   Collection (Logical)
		0x09, 0x03,        //     Usage (0x03)
		0x15, 0x00,        //     Logical Minimum (0)
		0x27, 0xFF, 0xFF, 0x00, 0x00,  //     Logical Maximum (65534)
		0x75, 0x10,        //     Report Size (16)
		0x95, 0x01,        //     Report Count (1)
		0xB1, 0x03,        //     Feature (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x09, 0x04,        //     Usage (0x04)
		0x09, 0x05,        //     Usage (0x05)
		0x09, 0x06,        //     Usage (0x06)
		0x09, 0x07,        //     Usage (0x07)
		0x09, 0x08,        //     Usage (0x08)
		0x15, 0x00,        //     Logical Minimum (0)
		0x27, 0xFF, 0xFF, 0xFF, 0x7F,  //     Logical Maximum (2147483646)
		0x75, 0x20,        //     Report Size (32)
		0x95, 0x05,        //     Report Count (5)
		0xB1, 0x03,        //     Feature (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0xC0,              //   End Collection
		0x85, 0x02,        //   Report ID (2)
		0x09, 0x20,        //   Usage (0x20)
		0xA1, 0x02,        //   Collection (Logical)
		0x09, 0x21,        //     Usage (0x21)
		0x15, 0x00,        //     Logical Minimum (0)
		0x27, 0xFF, 0xFF, 0x00, 0x00,  //     Logical Maximum (65534)
		0x75, 0x10,        //     Report Size (16)
		0x95, 0x01,        //     Report Count (1)
		0xB1, 0x02,        //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0xC0,              //   End Collection
		0x85, 0x03,        //   Report ID (3)
		0x09, 0x22,        //   Usage (0x22)
		0xA1, 0x02,        //   Collection (Logical)
		0x09, 0x21,        //     Usage (0x21)
		0x15, 0x00,        //     Logical Minimum (0)
		0x27, 0xFF, 0xFF, 0x00, 0x00,  //     Logical Maximum (65534)
		0x75, 0x10,        //     Report Size (16)
		0x95, 0x01,        //     Report Count (1)
		0xB1, 0x02,        //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x09, 0x23,        //     Usage (0x23)
		0x09, 0x24,        //     Usage (0x24)
		0x09, 0x25,        //     Usage (0x25)
		0x09, 0x27,        //     Usage (0x27)
		0x09, 0x26,        //     Usage (0x26)
		0x15, 0x00,        //     Logical Minimum (0)
		0x27, 0xFF, 0xFF, 0xFF, 0x7F,  //     Logical Maximum (2147483646)
		0x75, 0x20,        //     Report Size (32)
		0x95, 0x05,        //     Report Count (5)
		0xB1, 0x02,        //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x09, 0x28,        //     Usage (0x28)
		0x09, 0x29,        //     Usage (0x29)
		0x09, 0x2A,        //     Usage (0x2A)
		0x09, 0x2C,        //     Usage (0x2C)
		0x09, 0x2D,        //     Usage (0x2D)
		0x15, 0x00,        //     Logical Minimum (0)
		0x26, 0xFF, 0x00,  //     Logical Maximum (255)
		0x75, 0x08,        //     Report Size (8)
		0x95, 0x05,        //     Report Count (5)
		0xB1, 0x02,        //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0xC0,              //   End Collection
		0x85, 0x04,        //   Report ID (4)
		0x09, 0x50,        //   Usage (0x50)
		0xA1, 0x02,        //   Collection (Logical)
		0x09, 0x03,        //     Usage (0x03)
		0x09, 0x55,        //     Usage (0x55)
		0x15, 0x00,        //     Logical Minimum (0)
		0x25, 0x08,        //     Logical Maximum (8)
		0x75, 0x08,        //     Report Size (8)
		0x95, 0x02,        //     Report Count (2)
		0xB1, 0x02,        //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x09, 0x21,        //     Usage (0x21)
		0x15, 0x00,        //     Logical Minimum (0)
		0x27, 0xFF, 0xFF, 0x00, 0x00,  //     Logical Maximum (65534)
		0x75, 0x10,        //     Report Size (16)
		0x95, 0x08,        //     Report Count (8)
		0xB1, 0x02,        //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x09, 0x51,        //     Usage (0x51)
		0x09, 0x52,        //     Usage (0x52)
		0x09, 0x53,        //     Usage (0x53)
		0x09, 0x51,        //     Usage (0x51)
		0x09, 0x52,        //     Usage (0x52)
		0x09, 0x53,        //     Usage (0x53)
		0x09, 0x51,        //     Usage (0x51)
		0x09, 0x52,        //     Usage (0x52)
		0x09, 0x53,        //     Usage (0x53)
		0x09, 0x51,        //     Usage (0x51)
		0x09, 0x52,        //     Usage (0x52)
		0x09, 0x53,        //     Usage (0x53)
		0x09, 0x51,        //     Usage (0x51)
		0x09, 0x52,        //     Usage (0x52)
		0x09, 0x53,        //     Usage (0x53)
		0x09, 0x51,        //     Usage (0x51)
		0x09, 0x52,        //     Usage (0x52)
		0x09, 0x53,        //     Usage (0x53)
		0x09, 0x51,        //     Usage (0x51)
		0x09, 0x52,        //     Usage (0x52)
		0x09, 0x53,        //     Usage (0x53)
		0x09, 0x51,        //     Usage (0x51)
		0x09, 0x52,        //     Usage (0x52)
		0x09, 0x53,        //     Usage (0x53)
		0x15, 0x00,        //     Logical Minimum (0)
		0x26, 0xFF, 0x00,  //     Logical Maximum (255)
		0x75, 0x08,        //     Report Size (8)
		0x95, 0x18,        //     Report Count (24)
		0xB1, 0x02,        //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0xC0,              //   End Collection
		0x85, 0x05,        //   Report ID (5)
		0x09, 0x60,        //   Usage (0x60)
		0xA1, 0x02,        //   Collection (Logical)
		0x09, 0x55,        //     Usage (0x55)
		0x15, 0x00,        //     Logical Minimum (0)
		0x25, 0x08,        //     Logical Maximum (8)
		0x75, 0x08,        //     Report Size (8)
		0x95, 0x01,        //     Report Count (1)
		0xB1, 0x02,        //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x09, 0x61,        //     Usage (0x61)
		0x09, 0x62,        //     Usage (0x62)
		0x15, 0x00,        //     Logical Minimum (0)
		0x27, 0xFF, 0xFF, 0x00, 0x00,  //     Logical Maximum (65534)
		0x75, 0x10,        //     Report Size (16)
		0x95, 0x02,        //     Report Count (2)
		0xB1, 0x02,        //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x09, 0x51,        //     Usage (0x51)
		0x09, 0x52,        //     Usage (0x52)
		0x09, 0x53,        //     Usage (0x53)
		0x15, 0x00,        //     Logical Minimum (0)
		0x26, 0xFF, 0x00,  //     Logical Maximum (255)
		0x75, 0x08,        //     Report Size (8)
		0x95, 0x03,        //     Report Count (3)
		0xB1, 0x02,        //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0xC0,              //   End Collection
		0x85, 0x06,        //   Report ID (6)
		0x09, 0x70,        //   Usage (0x70)
		0xA1, 0x02,        //   Collection (Logical)
		0x09, 0x71,        //     Usage (0x71)
		0x15, 0x00,        //     Logical Minimum (0)
		0x25, 0x01,        //     Logical Maximum (1)
		0x75, 0x08,        //     Report Size (8)
		0x95, 0x01,        //     Report Count (1)
		0xB1, 0x02,        //     Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0xC0,              //   End Collection
		0x85, 0x07,        //   Report ID (7)
		0x06, 0x00, 0xFF,  //   Usage Page (Vendor Defined 0xFF00)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x09, 0x02,        //   Usage (0x02)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x3F,        //   Report Count (63)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0xC0,              // End Collection
	};


	const uint8_t LOGITECH_G305_1[59] = {
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x06,        // Usage (Keyboard)
		0xA1, 0x01,        // Collection (Application)
		0x05, 0x07,        //   Usage Page (Kbrd/Keypad)
		0x19, 0xE0,        //   Usage Minimum (0xE0)
		0x29, 0xE7,        //   Usage Maximum (0xE7)
		0x15, 0x00,        //   Logical Minimum (0)
		0x25, 0x01,        //   Logical Maximum (1)
		0x75, 0x01,        //   Report Size (1)
		0x95, 0x08,        //   Report Count (8)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x81, 0x03,        //   Input (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x95, 0x05,        //   Report Count (5)
		0x05, 0x08,        //   Usage Page (LEDs)
		0x19, 0x01,        //   Usage Minimum (Num Lock)
		0x29, 0x05,        //   Usage Maximum (Kana)
		0x91, 0x02,        //   Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x95, 0x01,        //   Report Count (1)
		0x75, 0x03,        //   Report Size (3)
		0x91, 0x01,        //   Output (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x95, 0x0A,        //   Report Count (10)
		0x75, 0x08,        //   Report Size (8)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xA4, 0x00,  //   Logical Maximum (164)
		0x05, 0x07,        //   Usage Page (Kbrd/Keypad)
		0x19, 0x00,        //   Usage Minimum (0x00)
		0x2A, 0xA4, 0x00,  //   Usage Maximum (0xA4)
		0x81, 0x00,        //   Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
	};


	const uint8_t LOGITECH_G305_2[148] = {
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x02,        // Usage (Mouse)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x02,        //   Report ID (2)
		0x09, 0x01,        //   Usage (Pointer)
		0xA1, 0x00,        //   Collection (Physical)
		0x05, 0x09,        //     Usage Page (Button)
		0x19, 0x01,        //     Usage Minimum (0x01)
		0x29, 0x10,        //     Usage Maximum (0x10)
		0x15, 0x00,        //     Logical Minimum (0)
		0x25, 0x01,        //     Logical Maximum (1)
		0x95, 0x10,        //     Report Count (16)
		0x75, 0x01,        //     Report Size (1)
		0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x05, 0x01,        //     Usage Page (Generic Desktop Ctrls)
		0x16, 0x01, 0x80,  //     Logical Minimum (-32767)
		0x26, 0xFF, 0x7F,  //     Logical Maximum (32767)
		0x75, 0x10,        //     Report Size (16)
		0x95, 0x02,        //     Report Count (2)
		0x09, 0x30,        //     Usage (X)
		0x09, 0x31,        //     Usage (Y)
		0x81, 0x06,        //     Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0x15, 0x81,        //     Logical Minimum (-127)
		0x25, 0x7F,        //     Logical Maximum (127)
		0x75, 0x08,        //     Report Size (8)
		0x95, 0x01,        //     Report Count (1)
		0x09, 0x38,        //     Usage (Wheel)
		0x81, 0x06,        //     Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0x05, 0x0C,        //     Usage Page (Consumer)
		0x0A, 0x38, 0x02,  //     Usage (AC Pan)
		0x95, 0x01,        //     Report Count (1)     <- unneeded
		0x81, 0x06,        //     Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              //   End Collection
		0xC0,              // End Collection
		0x05, 0x0C,        // Usage Page (Consumer)
		0x09, 0x01,        // Usage (Consumer Control)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x03,        //   Report ID (3)
		0x75, 0x10,        //   Report Size (16)
		0x95, 0x02,        //   Report Count (2)
		0x15, 0x01,        //   Logical Minimum (1)
		0x26, 0xFF, 0x02,  //   Logical Maximum (767)
		0x19, 0x01,        //   Usage Minimum (Consumer Control)
		0x2A, 0xFF, 0x02,  //   Usage Maximum (0x02FF)
		0x81, 0x00,        //   Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x80,        // Usage (Sys Control)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x04,        //   Report ID (4)
		0x75, 0x02,        //   Report Size (2)
		0x95, 0x01,        //   Report Count (1)
		0x15, 0x01,        //   Logical Minimum (1)
		0x25, 0x03,        //   Logical Maximum (3)
		0x09, 0x82,        //   Usage (Sys Sleep)
		0x09, 0x81,        //   Usage (Sys Power Down)
		0x09, 0x83,        //   Usage (Sys Wake Up)
		0x81, 0x60,        //   Input (Data,Array,Abs,No Wrap,Linear,No Preferred State,Null State)
		0x75, 0x06,        //   Report Size (6)
		0x81, 0x03,        //   Input (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
		0x06, 0xBC, 0xFF,  // Usage Page (Vendor Defined 0xFFBC)
		0x09, 0x88,        // Usage (0x88)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x08,        //   Report ID (8)
		0x19, 0x01,        //   Usage Minimum (0x01)
		0x29, 0xFF,        //   Usage Maximum (0xFF)
		0x15, 0x01,        //   Logical Minimum (1)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x01,        //   Report Count (1)
		0x81, 0x00,        //   Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
	};


	const uint8_t LOGITECH_G305_3[98] = {
		0x06, 0x00, 0xFF,  // Usage Page (Vendor Defined 0xFF00)
		0x09, 0x01,        // Usage (0x01)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x10,        //   Report ID (16)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x06,        //   Report Count (6)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x09, 0x01,        //   Usage (0x01)
		0x81, 0x00,        //   Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x09, 0x01,        //   Usage (0x01)
		0x91, 0x00,        //   Output (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0xC0,              // End Collection
		0x06, 0x00, 0xFF,  // Usage Page (Vendor Defined 0xFF00)
		0x09, 0x02,        // Usage (0x02)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x11,        //   Report ID (17)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x13,        //   Report Count (19)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x09, 0x02,        //   Usage (0x02)
		0x81, 0x00,        //   Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x09, 0x02,        //   Usage (0x02)
		0x91, 0x00,        //   Output (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0xC0,              // End Collection
		0x06, 0x00, 0xFF,  // Usage Page (Vendor Defined 0xFF00)
		0x09, 0x04,        // Usage (0x04)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x20,        //   Report ID (32)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x0E,        //   Report Count (14)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x09, 0x41,        //   Usage (0x41)
		0x81, 0x00,        //   Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x09, 0x41,        //   Usage (0x41)
		0x91, 0x00,        //   Output (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0x21,        //   Report ID (33)
		0x95, 0x1F,        //   Report Count (31)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x09, 0x42,        //   Usage (0x42)
		0x81, 0x00,        //   Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x09, 0x42,        //   Usage (0x42)
		0x91, 0x00,        //   Output (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0xC0,              // End Collection
	};


	const uint8_t LOGITECH_G203_1[67] = {
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x02,        // Usage (Mouse)
		0xA1, 0x01,        // Collection (Application)
		0x09, 0x01,        //   Usage (Pointer)
		0xA1, 0x00,        //   Collection (Physical)
		0x05, 0x09,        //     Usage Page (Button)
		0x19, 0x01,        //     Usage Minimum (0x01)
		0x29, 0x10,        //     Usage Maximum (0x10)
		0x15, 0x00,        //     Logical Minimum (0)
		0x25, 0x01,        //     Logical Maximum (1)
		0x95, 0x10,        //     Report Count (16)
		0x75, 0x01,        //     Report Size (1)
		0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x05, 0x01,        //     Usage Page (Generic Desktop Ctrls)
		0x16, 0x01, 0x80,  //     Logical Minimum (-32767)
		0x26, 0xFF, 0x7F,  //     Logical Maximum (32767)
		0x75, 0x10,        //     Report Size (16)
		0x95, 0x02,        //     Report Count (2)
		0x09, 0x30,        //     Usage (X)
		0x09, 0x31,        //     Usage (Y)
		0x81, 0x06,        //     Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0x15, 0x81,        //     Logical Minimum (-127)
		0x25, 0x7F,        //     Logical Maximum (127)
		0x75, 0x08,        //     Report Size (8)
		0x95, 0x01,        //     Report Count (1)
		0x09, 0x38,        //     Usage (Wheel)
		0x81, 0x06,        //     Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0x05, 0x0C,        //     Usage Page (Consumer)
		0x0A, 0x38, 0x02,  //     Usage (AC Pan)
		0x95, 0x01,        //     Report Count (1)
		0x81, 0x06,        //     Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              //   End Collection
		0xC0,              // End Collection
	};


	const uint8_t LOGITECH_G203_2[151] = {
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x06,        // Usage (Keyboard)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x01,        //   Report ID (1)
		0x05, 0x07,        //   Usage Page (Kbrd/Keypad)
		0x19, 0xE0,        //   Usage Minimum (0xE0)
		0x29, 0xE7,        //   Usage Maximum (0xE7)
		0x15, 0x00,        //   Logical Minimum (0)
		0x25, 0x01,        //   Logical Maximum (1)
		0x75, 0x01,        //   Report Size (1)
		0x95, 0x08,        //   Report Count (8)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x81, 0x03,        //   Input (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x95, 0x06,        //   Report Count (6)
		0x75, 0x08,        //   Report Size (8)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xA4, 0x00,  //   Logical Maximum (164)
		0x19, 0x00,        //   Usage Minimum (0x00)
		0x2A, 0xA4, 0x00,  //   Usage Maximum (0xA4)
		0x81, 0x00,        //   Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
		0x05, 0x0C,        // Usage Page (Consumer)
		0x09, 0x01,        // Usage (Consumer Control)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x03,        //   Report ID (3)
		0x75, 0x10,        //   Report Size (16)
		0x95, 0x02,        //   Report Count (2)
		0x15, 0x01,        //   Logical Minimum (1)
		0x26, 0x8C, 0x02,  //   Logical Maximum (652)
		0x19, 0x01,        //   Usage Minimum (Consumer Control)
		0x2A, 0x8C, 0x02,  //   Usage Maximum (AC Send)
		0x81, 0x00,        //   Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x80,        // Usage (Sys Control)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x04,        //   Report ID (4)
		0x75, 0x02,        //   Report Size (2)
		0x95, 0x01,        //   Report Count (1)
		0x15, 0x01,        //   Logical Minimum (1)
		0x25, 0x03,        //   Logical Maximum (3)
		0x09, 0x82,        //   Usage (Sys Sleep)
		0x09, 0x81,        //   Usage (Sys Power Down)
		0x09, 0x83,        //   Usage (Sys Wake Up)
		0x81, 0x60,        //   Input (Data,Array,Abs,No Wrap,Linear,No Preferred State,Null State)
		0x75, 0x06,        //   Report Size (6)
		0x81, 0x03,        //   Input (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
		0x06, 0x00, 0xFF,  // Usage Page (Vendor Defined 0xFF00)
		0x09, 0x01,        // Usage (0x01)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x10,        //   Report ID (16)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x06,        //   Report Count (6)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x09, 0x01,        //   Usage (0x01)
		0x81, 0x00,        //   Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x09, 0x01,        //   Usage (0x01)
		0x91, 0x00,        //   Output (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0xC0,              // End Collection
		0x06, 0x00, 0xFF,  // Usage Page (Vendor Defined 0xFF00)
		0x09, 0x02,        // Usage (0x02)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x11,        //   Report ID (17)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x13,        //   Report Count (19)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x09, 0x02,        //   Usage (0x02)
		0x81, 0x00,        //   Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x09, 0x02,        //   Usage (0x02)
		0x91, 0x00,        //   Output (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0xC0,              // End Collection
	};


	const uint8_t RASPBERRY_PI[52] = {
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x02,        // Usage (Mouse)
		0xA1, 0x01,        // Collection (Application)
		0x09, 0x01,        //   Usage (Pointer)
		0xA1, 0x00,        //   Collection (Physical)
		0x05, 0x09,        //     Usage Page (Button)
		0x19, 0x01,        //     Usage Minimum (0x01)
		0x29, 0x03,        //     Usage Maximum (0x03)
		0x15, 0x00,        //     Logical Minimum (0)
		0x25, 0x01,        //     Logical Maximum (1)
		0x75, 0x01,        //     Report Size (1)
		0x95, 0x03,        //     Report Count (3)
		0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x75, 0x05,        //     Report Size (5)
		0x95, 0x01,        //     Report Count (1)
		0x81, 0x01,        //     Input (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x05, 0x01,        //     Usage Page (Generic Desktop Ctrls)
		0x09, 0x30,        //     Usage (X)
		0x09, 0x31,        //     Usage (Y)
		0x09, 0x38,        //     Usage (Wheel)
		0x15, 0x81,        //     Logical Minimum (-127)
		0x25, 0x7F,        //     Logical Maximum (127)
		0x75, 0x08,        //     Report Size (8)
		0x95, 0x03,        //     Report Count (3)
		0x81, 0x06,        //     Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              //   End Collection
		0xC0,              // End Collection
	};


	const uint8_t GLORIOUS_MODEL_O_MINUS_WIRED_1[71] = {
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x02,        // Usage (Mouse)
		0xA1, 0x01,        // Collection (Application)
		0x09, 0x01,        //   Usage (Pointer)
		0xA1, 0x00,        //   Collection (Physical)
		0x05, 0x09,        //     Usage Page (Button)
		0x19, 0x01,        //     Usage Minimum (0x01)
		0x29, 0x05,        //     Usage Maximum (0x05)
		0x15, 0x00,        //     Logical Minimum (0)
		0x25, 0x01,        //     Logical Maximum (1)
		0x75, 0x01,        //     Report Size (1)
		0x95, 0x05,        //     Report Count (5)
		0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x95, 0x03,        //     Report Count (3)
		0x81, 0x01,        //     Input (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x05, 0x01,        //     Usage Page (Generic Desktop Ctrls)
		0x09, 0x30,        //     Usage (X)
		0x09, 0x31,        //     Usage (Y)
		0x16, 0x00, 0x80,  //     Logical Minimum (-32768)
		0x26, 0xFF, 0x7F,  //     Logical Maximum (32767)
		0x75, 0x10,        //     Report Size (16)
		0x95, 0x02,        //     Report Count (2)
		0x81, 0x06,        //     Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0x09, 0x38,        //     Usage (Wheel)
		0x15, 0x80,        //     Logical Minimum (-128)
		0x25, 0x7F,        //     Logical Maximum (127)
		0x75, 0x08,        //     Report Size (8)
		0x95, 0x01,        //     Report Count (1)
		0x81, 0x06,        //     Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0x05, 0x0C,        //     Usage Page (Consumer)
		0x0A, 0x38, 0x02,  //     Usage (AC Pan)
		0x95, 0x01,        //     Report Count (1)
		0x81, 0x06,        //     Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              //   End Collection
		0xC0,              // End Collection
	};


	const uint8_t GLORIOUS_MODEL_O_MINUS_WIRED_2[213] = {
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x06,        // Usage (Keyboard)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x01,        //   Report ID (1)
		0x05, 0x07,        //   Usage Page (Kbrd/Keypad)
		0x19, 0xE0,        //   Usage Minimum (0xE0)
		0x29, 0xE7,        //   Usage Maximum (0xE7)
		0x15, 0x00,        //   Logical Minimum (0)
		0x25, 0x01,        //   Logical Maximum (1)
		0x75, 0x01,        //   Report Size (1)
		0x95, 0x08,        //   Report Count (8)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x95, 0x06,        //   Report Count (6)
		0x75, 0x08,        //   Report Size (8)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x05, 0x07,        //   Usage Page (Kbrd/Keypad)
		0x19, 0x00,        //   Usage Minimum (0x00)
		0x2A, 0xFF, 0x00,  //   Usage Maximum (0xFF)
		0x81, 0x00,        //   Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
		0x06, 0x0C, 0x00,  // Usage Page (Consumer)
		0x09, 0x01,        // Usage (Consumer Control)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x02,        //   Report ID (2)
		0x25, 0x01,        //   Logical Maximum (1)
		0x15, 0x00,        //   Logical Minimum (0)
		0x75, 0x01,        //   Report Size (1)
		0x0A, 0xB5, 0x00,  //   Usage (Scan Next Track)
		0x0A, 0xB6, 0x00,  //   Usage (Scan Previous Track)
		0x0A, 0xB7, 0x00,  //   Usage (Stop)
		0x0A, 0xCD, 0x00,  //   Usage (Play/Pause)
		0x0A, 0xE2, 0x00,  //   Usage (Mute)
		0x0A, 0xA2, 0x00,  //   Usage (Daily)
		0x0A, 0xE9, 0x00,  //   Usage (Volume Increment)
		0x0A, 0xEA, 0x00,  //   Usage (Volume Decrement)
		0x95, 0x08,        //   Report Count (8)
		0x81, 0x03,        //   Input (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x0A, 0x83, 0x01,  //   Usage (AL Consumer Control Configuration)
		0x0A, 0x94, 0x01,  //   Usage (AL Local Machine Browser)
		0x0A, 0x86, 0x01,  //   Usage (AL Spreadsheet)
		0x0A, 0x88, 0x01,  //   Usage (AL Presentation App)
		0x0A, 0x8A, 0x01,  //   Usage (AL Email Reader)
		0x0A, 0x92, 0x01,  //   Usage (AL Calculator)
		0x0A, 0xA8, 0x02,  //   Usage (0x02A8)
		0x0A, 0x84, 0x01,  //   Usage (AL Word Processor)
		0x95, 0x08,        //   Report Count (8)
		0x81, 0x03,        //   Input (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x0A, 0x21, 0x02,  //   Usage (AC Search)
		0x0A, 0x23, 0x02,  //   Usage (AC Home)
		0x0A, 0x24, 0x02,  //   Usage (AC Back)
		0x0A, 0x25, 0x02,  //   Usage (AC Forward)
		0x0A, 0x26, 0x02,  //   Usage (AC Stop)
		0x0A, 0x27, 0x02,  //   Usage (AC Refresh)
		0x0A, 0x2A, 0x02,  //   Usage (AC Bookmarks)
		0x0A, 0xB1, 0x02,  //   Usage (0x02B1)
		0x95, 0x08,        //   Report Count (8)
		0x81, 0x03,        //   Input (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
		0x06, 0x00, 0xFF,  // Usage Page (Vendor Defined 0xFF00)
		0x09, 0x01,        // Usage (0x01)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x04,        //   Report ID (4)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x09, 0x00,        //   Usage (0x00)
		0x75, 0x08,        //   Report Size (8)
		0x96, 0x07, 0x02,  //   Report Count (519)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0xC0,              // End Collection
		0x06, 0x00, 0xFF,  // Usage Page (Vendor Defined 0xFF00)
		0x09, 0x01,        // Usage (0x01)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x07,        //   Report ID (7)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x09, 0x00,        //   Usage (0x00)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x07,        //   Report Count (7)
		0x81, 0x00,        //   Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
		0x06, 0x00, 0xFF,  // Usage Page (Vendor Defined 0xFF00)
		0x09, 0x01,        // Usage (0x01)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x05,        //   Report ID (5)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x09, 0x00,        //   Usage (0x00)
		0x95, 0x05,        //   Report Count (5)
		0x75, 0x08,        //   Report Size (8)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0xC0,              // End Collection
	};


	const uint8_t EASTERN_TIMES_TECHNOLOGY_T16_1[71]{
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x02,        // Usage (Mouse)
		0xA1, 0x01,        // Collection (Application)
		0x09, 0x01,        //   Usage (Pointer)
		0xA1, 0x00,        //   Collection (Physical)
		0x05, 0x09,        //     Usage Page (Button)
		0x19, 0x01,        //     Usage Minimum (0x01)
		0x29, 0x05,        //     Usage Maximum (0x05)
		0x15, 0x00,        //     Logical Minimum (0)
		0x25, 0x01,        //     Logical Maximum (1)
		0x75, 0x01,        //     Report Size (1)
		0x95, 0x05,        //     Report Count (5)
		0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x95, 0x03,        //     Report Count (3)
		0x81, 0x01,        //     Input (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x05, 0x01,        //     Usage Page (Generic Desktop Ctrls)
		0x09, 0x30,        //     Usage (X)
		0x09, 0x31,        //     Usage (Y)
		0x16, 0x00, 0x80,  //     Logical Minimum (-32768)
		0x26, 0xFF, 0x7F,  //     Logical Maximum (32767)
		0x75, 0x10,        //     Report Size (16)
		0x95, 0x02,        //     Report Count (2)
		0x81, 0x06,        //     Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0x09, 0x38,        //     Usage (Wheel)
		0x15, 0x80,        //     Logical Minimum (-128)
		0x25, 0x7F,        //     Logical Maximum (127)
		0x75, 0x08,        //     Report Size (8)
		0x95, 0x01,        //     Report Count (1)
		0x81, 0x06,        //     Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0x05, 0x0C,        //     Usage Page (Consumer)
		0x0A, 0x38, 0x02,  //     Usage (AC Pan)
		0x95, 0x01,        //     Report Count (1)
		0x81, 0x06,        //     Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              //   End Collection
		0xC0,              // End Collection
	};


	const uint8_t EASTERN_TIMES_TECHNOLOGY_T16_2[259] = {
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x06,        // Usage (Keyboard)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x01,        //   Report ID (1)
		0x05, 0x07,        //   Usage Page (Kbrd/Keypad)
		0x19, 0xE0,        //   Usage Minimum (0xE0)
		0x29, 0xE7,        //   Usage Maximum (0xE7)
		0x15, 0x00,        //   Logical Minimum (0)
		0x25, 0x01,        //   Logical Maximum (1)
		0x75, 0x01,        //   Report Size (1)
		0x95, 0x08,        //   Report Count (8)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x95, 0x06,        //   Report Count (6)
		0x75, 0x08,        //   Report Size (8)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x05, 0x07,        //   Usage Page (Kbrd/Keypad)
		0x19, 0x00,        //   Usage Minimum (0x00)
		0x2A, 0xFF, 0x00,  //   Usage Maximum (0xFF)
		0x81, 0x00,        //   Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
		0x06, 0x0C, 0x00,  // Usage Page (Consumer)
		0x09, 0x01,        // Usage (Consumer Control)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x02,        //   Report ID (2)
		0x25, 0x01,        //   Logical Maximum (1)
		0x15, 0x00,        //   Logical Minimum (0)
		0x75, 0x01,        //   Report Size (1)
		0x0A, 0xB5, 0x00,  //   Usage (Scan Next Track)
		0x0A, 0xB6, 0x00,  //   Usage (Scan Previous Track)
		0x0A, 0xB7, 0x00,  //   Usage (Stop)
		0x0A, 0xCD, 0x00,  //   Usage (Play/Pause)
		0x0A, 0xE2, 0x00,  //   Usage (Mute)
		0x0A, 0xA2, 0x00,  //   Usage (Daily)
		0x0A, 0xE9, 0x00,  //   Usage (Volume Increment)
		0x0A, 0xEA, 0x00,  //   Usage (Volume Decrement)
		0x95, 0x08,        //   Report Count (8)
		0x81, 0x03,        //   Input (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x0A, 0x83, 0x01,  //   Usage (AL Consumer Control Configuration)
		0x0A, 0x94, 0x01,  //   Usage (AL Local Machine Browser)
		0x0A, 0x86, 0x01,  //   Usage (AL Spreadsheet)
		0x0A, 0x88, 0x01,  //   Usage (AL Presentation App)
		0x0A, 0x8A, 0x01,  //   Usage (AL Email Reader)
		0x0A, 0x92, 0x01,  //   Usage (AL Calculator)
		0x0A, 0xA8, 0x02,  //   Usage (0x02A8)
		0x0A, 0x84, 0x01,  //   Usage (AL Word Processor)
		0x95, 0x08,        //   Report Count (8)
		0x81, 0x03,        //   Input (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x0A, 0x21, 0x02,  //   Usage (AC Search)
		0x0A, 0x23, 0x02,  //   Usage (AC Home)
		0x0A, 0x24, 0x02,  //   Usage (AC Back)
		0x0A, 0x25, 0x02,  //   Usage (AC Forward)
		0x0A, 0x26, 0x02,  //   Usage (AC Stop)
		0x0A, 0x27, 0x02,  //   Usage (AC Refresh)
		0x0A, 0x2A, 0x02,  //   Usage (AC Bookmarks)
		0x0A, 0xB1, 0x02,  //   Usage (0x02B1)
		0x95, 0x08,        //   Report Count (8)
		0x81, 0x03,        //   Input (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
		0x06, 0x00, 0xFF,  // Usage Page (Vendor Defined 0xFF00)
		0x09, 0x01,        // Usage (0x01)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x04,        //   Report ID (4)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x09, 0x00,        //   Usage (0x00)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x3A,        //   Report Count (58)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0xC0,              // End Collection
		0x06, 0x00, 0xFF,  // Usage Page (Vendor Defined 0xFF00)
		0x09, 0x01,        // Usage (0x01)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x06,        //   Report ID (6)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x09, 0x00,        //   Usage (0x00)
		0x75, 0x08,        //   Report Size (8)
		0x96, 0x78, 0x04,  //   Report Count (1144)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0xC0,              // End Collection
		0x06, 0x00, 0xFF,  // Usage Page (Vendor Defined 0xFF00)
		0x09, 0x01,        // Usage (0x01)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x07,        //   Report ID (7)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x09, 0x00,        //   Usage (0x00)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x04,        //   Report Count (4)
		0x81, 0x00,        //   Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
		0x06, 0x00, 0xFF,  // Usage Page (Vendor Defined 0xFF00)
		0x09, 0x01,        // Usage (0x01)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x08,        //   Report ID (8)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x09, 0x00,        //   Usage (0x00)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x08,        //   Report Count (8)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0xC0,              // End Collection
		0x06, 0x00, 0xFF,  // Usage Page (Vendor Defined 0xFF00)
		0x09, 0x01,        // Usage (0x01)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x05,        //   Report ID (5)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x09, 0x00,        //   Usage (0x00)
		0x95, 0x05,        //   Report Count (5)
		0x75, 0x08,        //   Report Size (8)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0xC0,              // End Collection
	};


	const uint8_t MMG_MARS[64] = {
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x02,        // Usage (Mouse)
		0xA1, 0x01,        // Collection (Application)
		0x09, 0x01,        //   Usage (Pointer)
		0xA1, 0x00,        //   Collection (Physical)
		0x05, 0x09,        //     Usage Page (Button)
		0x19, 0x01,        //     Usage Minimum (0x01)
		0x29, 0x05,        //     Usage Maximum (0x05)
		0x15, 0x00,        //     Logical Minimum (0)
		0x25, 0x01,        //     Logical Maximum (1)
		0x95, 0x05,        //     Report Count (5)
		0x75, 0x01,        //     Report Size (1)
		0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x95, 0x01,        //     Report Count (1)
		0x75, 0x03,        //     Report Size (3)
		0x81, 0x01,        //     Input (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x05, 0x01,        //     Usage Page (Generic Desktop Ctrls)
		0x09, 0x30,        //     Usage (X)
		0x09, 0x31,        //     Usage (Y)
		0x16, 0x00, 0xF8,  //     Logical Minimum (-2048)
		0x26, 0xFF, 0x07,  //     Logical Maximum (2047)
		0x75, 0x0C,        //     Report Size (12)
		0x95, 0x02,        //     Report Count (2)
		0x81, 0x06,        //     Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0x09, 0x38,        //     Usage (Wheel)
		0x15, 0x81,        //     Logical Minimum (-127)
		0x25, 0x7F,        //     Logical Maximum (127)
		0x75, 0x08,        //     Report Size (8)
		0x95, 0x01,        //     Report Count (1)
		0x81, 0x06,        //     Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              //   End Collection
		0xC0,              // End Collection
	};


	const uint8_t HAVIT[204] = {
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x02,        // Usage (Mouse)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x01,        //   Report ID (1)
		0x09, 0x01,        //   Usage (Pointer)
		0xA1, 0x00,        //   Collection (Physical)
		0x05, 0x09,        //     Usage Page (Button)
		0x19, 0x01,        //     Usage Minimum (0x01)
		0x29, 0x05,        //     Usage Maximum (0x05)
		0x15, 0x00,        //     Logical Minimum (0)
		0x25, 0x01,        //     Logical Maximum (1)
		0x95, 0x05,        //     Report Count (5)
		0x75, 0x01,        //     Report Size (1)
		0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x95, 0x01,        //     Report Count (1)
		0x75, 0x03,        //     Report Size (3)
		0x81, 0x01,        //     Input (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x05, 0x01,        //     Usage Page (Generic Desktop Ctrls)
		0x16, 0x01, 0x80,  //     Logical Minimum (-32767)
		0x26, 0xFF, 0x7F,  //     Logical Maximum (32767)
		0x75, 0x10,        //     Report Size (16)
		0x95, 0x02,        //     Report Count (2)
		0x09, 0x30,        //     Usage (X)
		0x09, 0x31,        //     Usage (Y)
		0x81, 0x06,        //     Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0x15, 0x80,        //     Logical Minimum (-128)
		0x25, 0x7F,        //     Logical Maximum (127)
		0x75, 0x08,        //     Report Size (8)
		0x95, 0x01,        //     Report Count (1)
		0x09, 0x38,        //     Usage (Wheel)
		0x81, 0x06,        //     Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              //   End Collection
		0xC0,              // End Collection
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x06,        // Usage (Keyboard)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x02,        //   Report ID (2)
		0x05, 0x07,        //   Usage Page (Kbrd/Keypad)
		0x19, 0xE0,        //   Usage Minimum (0xE0)
		0x29, 0xE7,        //   Usage Maximum (0xE7)
		0x15, 0x00,        //   Logical Minimum (0)
		0x25, 0x01,        //   Logical Maximum (1)
		0x75, 0x01,        //   Report Size (1)
		0x95, 0x08,        //   Report Count (8)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x05, 0x08,        //   Usage Page (LEDs)
		0x19, 0x01,        //   Usage Minimum (Num Lock)
		0x29, 0x05,        //   Usage Maximum (Kana)
		0x95, 0x05,        //   Report Count (5)
		0x75, 0x01,        //   Report Size (1)
		0x91, 0x02,        //   Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x95, 0x01,        //   Report Count (1)
		0x75, 0x03,        //   Report Size (3)
		0x91, 0x01,        //   Output (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x05, 0x07,        //   Usage Page (Kbrd/Keypad)
		0x19, 0x00,        //   Usage Minimum (0x00)
		0x2A, 0xFF, 0x00,  //   Usage Maximum (0xFF)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x95, 0x06,        //   Report Count (6)
		0x75, 0x08,        //   Report Size (8)
		0x81, 0x00,        //   Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
		0x05, 0x0C,        // Usage Page (Consumer)
		0x09, 0x01,        // Usage (Consumer Control)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x03,        //   Report ID (3)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x02,  //   Logical Maximum (767)
		0x19, 0x00,        //   Usage Minimum (Unassigned)
		0x2A, 0xFF, 0x02,  //   Usage Maximum (0x02FF)
		0x75, 0x10,        //   Report Size (16)
		0x95, 0x01,        //   Report Count (1)
		0x81, 0x00,        //   Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
		0x06, 0x00, 0xFF,  // Usage Page (Vendor Defined 0xFF00)
		0x09, 0x01,        // Usage (0x01)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x04,        //   Report ID (4)
		0x19, 0x00,        //   Usage Minimum (0x00)
		0x2A, 0xFF, 0x00,  //   Usage Maximum (0xFF)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x07,        //   Report Count (7)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0xC0,              // End Collection
		0x06, 0x01, 0xFF,  // Usage Page (Vendor Defined 0xFF01)
		0x09, 0x01,        // Usage (0x01)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x05,        //   Report ID (5)
		0x19, 0x00,        //   Usage Minimum (0x00)
		0x2A, 0xFF, 0x00,  //   Usage Maximum (0xFF)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x05,        //   Report Count (5)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
	};


	const uint8_t LUDOS_FLAMMA_1[71] = {
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x02,        // Usage (Mouse)
		0xA1, 0x01,        // Collection (Application)
		0x09, 0x01,        //   Usage (Pointer)
		0xA1, 0x00,        //   Collection (Physical)
		0x05, 0x09,        //     Usage Page (Button)
		0x15, 0x00,        //     Logical Minimum (0)
		0x25, 0x01,        //     Logical Maximum (1)
		0x19, 0x01,        //     Usage Minimum (0x01)
		0x29, 0x05,        //     Usage Maximum (0x05)
		0x75, 0x01,        //     Report Size (1)
		0x95, 0x05,        //     Report Count (5)
		0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x95, 0x03,        //     Report Count (3)
		0x81, 0x01,        //     Input (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x05, 0x01,        //     Usage Page (Generic Desktop Ctrls)
		0x16, 0x01, 0x80,  //     Logical Minimum (-32767)
		0x26, 0xFF, 0x7F,  //     Logical Maximum (32767)
		0x09, 0x30,        //     Usage (X)
		0x09, 0x31,        //     Usage (Y)
		0x75, 0x10,        //     Report Size (16)
		0x95, 0x02,        //     Report Count (2)
		0x81, 0x06,        //     Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0x15, 0x81,        //     Logical Minimum (-127)
		0x25, 0x7F,        //     Logical Maximum (127)
		0x09, 0x38,        //     Usage (Wheel)
		0x75, 0x08,        //     Report Size (8)
		0x95, 0x01,        //     Report Count (1)
		0x81, 0x06,        //     Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0x05, 0x0C,        //     Usage Page (Consumer)
		0x0A, 0x38, 0x02,  //     Usage (AC Pan)
		0x95, 0x01,        //     Report Count (1)
		0x81, 0x06,        //     Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              //   End Collection
		0xC0,              // End Collection
	};


	const uint8_t LUDOS_FLAMMA_2[117] = {
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x06,        // Usage (Keyboard)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x01,        //   Report ID (1)
		0x05, 0x07,        //   Usage Page (Kbrd/Keypad)
		0x19, 0xE0,        //   Usage Minimum (0xE0)
		0x29, 0xE7,        //   Usage Maximum (0xE7)
		0x15, 0x00,        //   Logical Minimum (0)
		0x25, 0x01,        //   Logical Maximum (1)
		0x75, 0x01,        //   Report Size (1)
		0x95, 0x08,        //   Report Count (8)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x19, 0x00,        //   Usage Minimum (0x00)
		0x2A, 0xFF, 0x00,  //   Usage Maximum (0xFF)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x0E,        //   Report Count (14)
		0x81, 0x00,        //   Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x80,        // Usage (Sys Control)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x02,        //   Report ID (2)
		0x19, 0x81,        //   Usage Minimum (Sys Power Down)
		0x29, 0x83,        //   Usage Maximum (Sys Wake Up)
		0x15, 0x00,        //   Logical Minimum (0)
		0x25, 0x01,        //   Logical Maximum (1)
		0x75, 0x01,        //   Report Size (1)
		0x95, 0x03,        //   Report Count (3)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x95, 0x05,        //   Report Count (5)
		0x81, 0x01,        //   Input (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
		0x05, 0x0C,        // Usage Page (Consumer)
		0x09, 0x01,        // Usage (Consumer Control)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x03,        //   Report ID (3)
		0x19, 0x00,        //   Usage Minimum (Unassigned)
		0x2A, 0xFF, 0x02,  //   Usage Maximum (0x02FF)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x02,  //   Logical Maximum (767)
		0x75, 0x10,        //   Report Size (16)
		0x95, 0x01,        //   Report Count (1)
		0x81, 0x00,        //   Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
		0x06, 0x01, 0xFF,  // Usage Page (Vendor Defined 0xFF01)
		0x0A, 0x01, 0xFF,  // Usage (0xFF01)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x06,        //   Report ID (6)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x09, 0x2F,        //   Usage (0x2F)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x03,        //   Report Count (3)
		0x81, 0x00,        //   Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
	};


	const uint8_t LUDOS_FLAMMA_3[32] = {
		0x06, 0x00, 0xFF,  // Usage Page (Vendor Defined 0xFF00)
		0x0A, 0x00, 0xFF,  // Usage (0xFF00)
		0xA1, 0x01,        // Collection (Application)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x20,        //   Report Count (32)
		0x09, 0x20,        //   Usage (0x20)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x09, 0x21,        //   Usage (0x21)
		0x91, 0x02,        //   Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x09, 0x22,        //   Usage (0x22)
		0x95, 0x08,        //   Report Count (8)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0xC0,              // End Collection
	};


	const uint8_t UNKNOWN_1[50] = {
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x02,        // Usage (Mouse)
		0xA1, 0x01,        // Collection (Application)
		0x09, 0x01,        //   Usage (Pointer)
		0xA1, 0x00,        //   Collection (Physical)
		0x05, 0x09,        //     Usage Page (Button)
		0x19, 0x01,        //     Usage Minimum (0x01)
		0x29, 0x03,        //     Usage Maximum (0x03)
		0x15, 0x00,        //     Logical Minimum (0)
		0x25, 0x01,        //     Logical Maximum (1)
		0x95, 0x03,        //     Report Count (3)
		0x75, 0x01,        //     Report Size (1)
		0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x95, 0x01,        //     Report Count (1)
		0x75, 0x05,        //     Report Size (5)
		0x81, 0x03,        //     Input (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x05, 0x01,        //     Usage Page (Generic Desktop Ctrls)
		0x09, 0x30,        //     Usage (X)
		0x09, 0x31,        //     Usage (Y)
		0x15, 0x81,        //     Logical Minimum (-127)
		0x25, 0x7F,        //     Logical Maximum (127)
		0x75, 0x08,        //     Report Size (8)
		0x95, 0x02,        //     Report Count (2)
		0x81, 0x06,        //     Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              //   End Collection
		0xC0,              // End Collection
	};


	const uint8_t UNKNOWN_2[79] = {
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x02,        // Usage (Mouse)
		0xA1, 0x01,        // Collection (Application)
		0x05, 0x01,        //   Usage Page (Generic Desktop Ctrls)
		0x09, 0x02,        //   Usage (Mouse)
		0xA1, 0x02,        //   Collection (Logical)
		0x85, 0x1A,        //     Report ID (26)
		0x09, 0x01,        //     Usage (Pointer)
		0xA1, 0x00,        //     Collection (Physical)
		0x05, 0x09,        //       Usage Page (Button)
		0x19, 0x01,        //       Usage Minimum (0x01)
		0x29, 0x05,        //       Usage Maximum (0x05)
		0x95, 0x05,        //       Report Count (5)
		0x75, 0x01,        //       Report Size (1)
		0x15, 0x00,        //       Logical Minimum (0)
		0x25, 0x01,        //       Logical Maximum (1)
		0x81, 0x02,        //       Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x75, 0x03,        //       Report Size (3)
		0x95, 0x01,        //       Report Count (1)
		0x81, 0x01,        //       Input (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x05, 0x01,        //       Usage Page (Generic Desktop Ctrls)
		0x09, 0x30,        //       Usage (X)
		0x09, 0x31,        //       Usage (Y)
		0x95, 0x02,        //       Report Count (2)
		0x75, 0x10,        //       Report Size (16)
		0x16, 0x01, 0x80,  //       Logical Minimum (-32767)
		0x26, 0xFF, 0x7F,  //       Logical Maximum (32767)
		0x81, 0x06,        //       Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0x09, 0x38,        //       Usage (Wheel)
		0x35, 0x00,        //       Physical Minimum (0)
		0x45, 0x00,        //       Physical Maximum (0)
		0x95, 0x01,        //       Report Count (1)
		0x75, 0x10,        //       Report Size (16)
		0x16, 0x01, 0x80,  //       Logical Minimum (-32767)
		0x26, 0xFF, 0x7F,  //       Logical Maximum (32767)
		0x81, 0x06,        //       Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              //     End Collection
		0xC0,              //   End Collection
		0xC0,              // End Collection
	};


	const uint8_t ARDUINO_MOUSE_LIBRARY[54] = {
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x02,        // Usage (Mouse)
		0xA1, 0x01,        // Collection (Application)
		0x09, 0x01,        //   Usage (Pointer)
		0xA1, 0x00,        //   Collection (Physical)
		0x85, 0x01,        //     Report ID (1)
		0x05, 0x09,        //     Usage Page (Button)
		0x19, 0x01,        //     Usage Minimum (0x01)
		0x29, 0x03,        //     Usage Maximum (0x03)
		0x15, 0x00,        //     Logical Minimum (0)
		0x25, 0x01,        //     Logical Maximum (1)
		0x95, 0x03,        //     Report Count (3)
		0x75, 0x01,        //     Report Size (1)
		0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x95, 0x01,        //     Report Count (1)
		0x75, 0x05,        //     Report Size (5)
		0x81, 0x03,        //     Input (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x05, 0x01,        //     Usage Page (Generic Desktop Ctrls)
		0x09, 0x30,        //     Usage (X)
		0x09, 0x31,        //     Usage (Y)
		0x09, 0x38,        //     Usage (Wheel)
		0x15, 0x81,        //     Logical Minimum (-127)
		0x25, 0x7F,        //     Logical Maximum (127)
		0x75, 0x08,        //     Report Size (8)
		0x95, 0x03,        //     Report Count (3)
		0x81, 0x06,        //     Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              //   End Collection
		0xC0,              // End Collection
	};


	const uint8_t HANDCRAFTED_1[45] = {
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x02,        // Usage (Mouse)
		0xA1, 0x01,        // Collection (Application)
		0x09, 0x30,        //   Usage (X)
		0x09, 0x31,        //   Usage (Y)
		0x09, 0x38,        //   Usage (Wheel)
		0x15, 0x81,        //   Logical Minimum (-127)
		0x25, 0x7F,        //   Logical Maximum (127)
		0x95, 0x03,        //   Report Count (3)
		0x75, 0x08,        //   Report Size (8)
		0x81, 0x06,        //   Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0x05, 0x09,        //   Usage Page (Button)
		0x19, 0x01,        //   Usage Minimum (0x01)
		0x29, 0x05,        //   Usage Maximum (0x05)
		0x15, 0x00,        //   Logical Minimum (0)
		0x25, 0x01,        //   Logical Maximum (1)
		0x95, 0x05,        //   Report Count (5)
		0x75, 0x01,        //   Report Size (1)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x95, 0x01,        //   Report Count (1)
		0x75, 0x03,        //   Report Size (3)
		0x81, 0x01,        //   Input (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
	};


	const uint8_t HANDCRAFTED_2[39] = {
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x02,        // Usage (Mouse)
		0xA1, 0x01,        // Collection (Application)
		0x09, 0x30,        //   Usage (X)
		0x09, 0x31,        //   Usage (Y)
		0x09, 0x38,        //   Usage (Wheel)
		0x15, 0x81,        //   Logical Minimum (-127)
		0x25, 0x7F,        //   Logical Maximum (127)
		0x95, 0x03,        //   Report Count (3)
		0x75, 0x08,        //   Report Size (8)
		0x81, 0x06,        //   Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0x05, 0x09,        //   Usage Page (Button)
		0x19, 0x01,        //   Usage Minimum (0x01)
		0x29, 0x05,        //   Usage Maximum (0x05)
		0x15, 0x00,        //   Logical Minimum (0)
		0x25, 0x01,        //   Logical Maximum (1)
		0x95, 0x05,        //   Report Count (5)
		0x75, 0x01,        //   Report Size (1)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
	};


	const uint8_t HANDCRAFTED_3[39] = {
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x02,        // Usage (Mouse)
		0xA1, 0x01,        // Collection (Application)
		0x09, 0x30,        //   Usage (X)
		0x09, 0x31,        //   Usage (Y)
		0x09, 0x38,        //   Usage (Wheel)
		0x15, 0x81,        //   Logical Minimum (-127)
		0x25, 0x7F,        //   Logical Maximum (127)
		0x95, 0x03,        //   Report Count (3)
		0x75, 0x08,        //   Report Size (8)
		0x81, 0x06,        //   Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0x05, 0x09,        //   Usage Page (Button)
		0x19, 0x01,        //   Usage Minimum (0x01)
		0x29, 0x08,        //   Usage Maximum (0x08)
		0x15, 0x00,        //   Logical Minimum (0)
		0x25, 0x01,        //   Logical Maximum (1)
		0x95, 0x08,        //   Report Count (8)
		0x75, 0x01,        //   Report Size (1)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
	};


	const uint8_t HANDCRAFTED_4[39] = {
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x30,        // Usage (X)
		0x09, 0x31,        // Usage (Y)
		0x09, 0x38,        // Usage (Wheel)
		0x15, 0x81,        // Logical Minimum (-127)
		0x25, 0x7F,        // Logical Maximum (127)
		0x95, 0x03,        // Report Count (3)
		0x75, 0x08,        // Report Size (8)
		0x81, 0x06,        // Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0x09, 0x02,        // Usage (Mouse)
		0xA1, 0x01,        // Collection (Application)
		0x05, 0x09,        //   Usage Page (Button)
		0x19, 0x01,        //   Usage Minimum (0x01)
		0x29, 0x08,        //   Usage Maximum (0x08)
		0x15, 0x00,        //   Logical Minimum (0)
		0x25, 0x01,        //   Logical Maximum (1)
		0x95, 0x08,        //   Report Count (8)
		0x75, 0x01,        //   Report Size (1)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
	};


} // namespace mouse


namespace keyboard {

	const uint8_t COOLERMASTER_MASTERKEYS_S_1[64] = {
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x06,        // Usage (Keyboard)
		0xA1, 0x01,        // Collection (Application)
		0x05, 0x07,        //   Usage Page (Kbrd/Keypad)
		0x19, 0xE0,        //   Usage Minimum (0xE0)
		0x29, 0xE7,        //   Usage Maximum (0xE7)
		0x15, 0x00,        //   Logical Minimum (0)
		0x25, 0x01,        //   Logical Maximum (1)
		0x75, 0x01,        //   Report Size (1)
		0x95, 0x08,        //   Report Count (8)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x95, 0x01,        //   Report Count (1)
		0x75, 0x08,        //   Report Size (8)
		0x81, 0x03,        //   Input (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x95, 0x03,        //   Report Count (3)
		0x75, 0x01,        //   Report Size (1)
		0x05, 0x08,        //   Usage Page (LEDs)
		0x19, 0x01,        //   Usage Minimum (Num Lock)
		0x29, 0x03,        //   Usage Maximum (Scroll Lock)
		0x91, 0x02,        //   Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x95, 0x01,        //   Report Count (1)
		0x75, 0x05,        //   Report Size (5)
		0x91, 0x03,        //   Output (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x95, 0x06,        //   Report Count (6)
		0x75, 0x08,        //   Report Size (8)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xA4, 0x00,  //   Logical Maximum (164)
		0x05, 0x07,        //   Usage Page (Kbrd/Keypad)
		0x19, 0x00,        //   Usage Minimum (0x00)
		0x29, 0xA4,        //   Usage Maximum (0xA4)
		0x81, 0x00,        //   Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
	};


	const uint8_t COOLERMASTER_MASTERKEYS_S_2[34] = {
		0x06, 0x00, 0xFF,  // Usage Page (Vendor Defined 0xFF00)
		0x09, 0x01,        // Usage (0x01)
		0xA1, 0x01,        // Collection (Application)
		0x09, 0x02,        //   Usage (0x02)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x40,        //   Report Count (64)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x09, 0x03,        //   Usage (0x03)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x40,        //   Report Count (64)
		0x91, 0x02,        //   Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0xC0,              // End Collection
	};


	const uint8_t COOLERMASTER_MASTERKEYS_S_3[134] = {
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x80,        // Usage (Sys Control)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x01,        //   Report ID (1)
		0x19, 0x81,        //   Usage Minimum (Sys Power Down)
		0x29, 0x83,        //   Usage Maximum (Sys Wake Up)
		0x15, 0x00,        //   Logical Minimum (0)
		0x25, 0x01,        //   Logical Maximum (1)
		0x95, 0x03,        //   Report Count (3)
		0x75, 0x01,        //   Report Size (1)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x95, 0x01,        //   Report Count (1)
		0x75, 0x05,        //   Report Size (5)
		0x81, 0x01,        //   Input (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
		0x05, 0x0C,        // Usage Page (Consumer)
		0x09, 0x01,        // Usage (Consumer Control)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x02,        //   Report ID (2)
		0x15, 0x00,        //   Logical Minimum (0)
		0x25, 0x01,        //   Logical Maximum (1)
		0x95, 0x12,        //   Report Count (18)
		0x75, 0x01,        //   Report Size (1)
		0x0A, 0x83, 0x01,  //   Usage (AL Consumer Control Configuration)
		0x0A, 0x8A, 0x01,  //   Usage (AL Email Reader)
		0x0A, 0x92, 0x01,  //   Usage (AL Calculator)
		0x0A, 0x94, 0x01,  //   Usage (AL Local Machine Browser)
		0x09, 0xCD,        //   Usage (Play/Pause)
		0x09, 0xB7,        //   Usage (Stop)
		0x09, 0xB6,        //   Usage (Scan Previous Track)
		0x09, 0xB5,        //   Usage (Scan Next Track)
		0x09, 0xE2,        //   Usage (Mute)
		0x09, 0xEA,        //   Usage (Volume Decrement)
		0x09, 0xE9,        //   Usage (Volume Increment)
		0x0A, 0x21, 0x02,  //   Usage (AC Search)
		0x0A, 0x23, 0x02,  //   Usage (AC Home)
		0x0A, 0x24, 0x02,  //   Usage (AC Back)
		0x0A, 0x25, 0x02,  //   Usage (AC Forward)
		0x0A, 0x26, 0x02,  //   Usage (AC Stop)
		0x0A, 0x27, 0x02,  //   Usage (AC Refresh)
		0x0A, 0x2A, 0x02,  //   Usage (AC Bookmarks)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x95, 0x01,        //   Report Count (1)
		0x75, 0x0E,        //   Report Size (14)
		0x81, 0x01,        //   Input (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x06,        // Usage (Keyboard)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x04,        //   Report ID (4)
		0x05, 0x07,        //   Usage Page (Kbrd/Keypad)
		0x95, 0x01,        //   Report Count (1)
		0x75, 0x08,        //   Report Size (8)
		0x81, 0x03,        //   Input (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x95, 0xE8,        //   Report Count (-24)
		0x75, 0x01,        //   Report Size (1)
		0x15, 0x00,        //   Logical Minimum (0)
		0x25, 0x01,        //   Logical Maximum (1)
		0x05, 0x07,        //   Usage Page (Kbrd/Keypad)
		0x19, 0x00,        //   Usage Minimum (0x00)
		0x29, 0xE7,        //   Usage Maximum (0xE7)
		0x81, 0x00,        //   Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
	};


	const uint8_t RASPBERRY_PI_1[65] = {
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x06,        // Usage (Keyboard)
		0xA1, 0x01,        // Collection (Application)
		0x05, 0x07,        //   Usage Page (Kbrd/Keypad)
		0x19, 0xE0,        //   Usage Minimum (0xE0)
		0x29, 0xE7,        //   Usage Maximum (0xE7)
		0x15, 0x00,        //   Logical Minimum (0)
		0x25, 0x01,        //   Logical Maximum (1)
		0x75, 0x01,        //   Report Size (1)
		0x95, 0x08,        //   Report Count (8)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x95, 0x01,        //   Report Count (1)
		0x75, 0x08,        //   Report Size (8)
		0x81, 0x01,        //   Input (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x95, 0x03,        //   Report Count (3)
		0x75, 0x01,        //   Report Size (1)
		0x05, 0x08,        //   Usage Page (LEDs)
		0x19, 0x01,        //   Usage Minimum (Num Lock)
		0x29, 0x03,        //   Usage Maximum (Scroll Lock)
		0x91, 0x02,        //   Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x95, 0x05,        //   Report Count (5)
		0x75, 0x01,        //   Report Size (1)
		0x91, 0x01,        //   Output (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x95, 0x06,        //   Report Count (6)
		0x75, 0x08,        //   Report Size (8)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x05, 0x07,        //   Usage Page (Kbrd/Keypad)
		0x19, 0x00,        //   Usage Minimum (0x00)
		0x2A, 0xFF, 0x00,  //   Usage Maximum (0xFF)
		0x81, 0x00,        //   Input (Data,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
	};


	const uint8_t RASPBERRY_PI_2[59] = {
		0x05, 0x0C,        // Usage Page (Consumer)
		0x09, 0x01,        // Usage (Consumer Control)
		0xA1, 0x01,        // Collection (Application)
		0x05, 0x0C,        //   Usage Page (Consumer)
		0x75, 0x01,        //   Report Size (1)
		0x95, 0x01,        //   Report Count (1)
		0x15, 0x00,        //   Logical Minimum (0)
		0x25, 0x01,        //   Logical Maximum (1)
		0x09, 0xCD,        //   Usage (Play/Pause)
		0x81, 0x06,        //   Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0x09, 0xB5,        //   Usage (Scan Next Track)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x09, 0xB6,        //   Usage (Scan Previous Track)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x09, 0xB8,        //   Usage (Eject)
		0x81, 0x06,        //   Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0x09, 0xE2,        //   Usage (Mute)
		0x81, 0x06,        //   Input (Data,Var,Rel,No Wrap,Linear,Preferred State,No Null Position)
		0x09, 0xEA,        //   Usage (Volume Decrement)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x09, 0xE9,        //   Usage (Volume Increment)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x0A, 0x23, 0x02,  //   Usage (AC Home)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x0A, 0x92, 0x01,  //   Usage (AL Calculator)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x95, 0x07,        //   Report Count (7)
		0x81, 0x01,        //   Input (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              // End Collection
	};

} // namespace keyboard


namespace gamepad {

	const uint8_t PS4_1[507] = {
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x05,        // Usage (Game Pad)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x01,        //   Report ID (1)
		0x09, 0x30,        //   Usage (X)
		0x09, 0x31,        //   Usage (Y)
		0x09, 0x32,        //   Usage (Z)
		0x09, 0x35,        //   Usage (Rz)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x04,        //   Report Count (4)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x09, 0x39,        //   Usage (Hat switch)
		0x15, 0x00,        //   Logical Minimum (0)
		0x25, 0x07,        //   Logical Maximum (7)
		0x35, 0x00,        //   Physical Minimum (0)
		0x46, 0x3B, 0x01,  //   Physical Maximum (315)
		0x65, 0x14,        //   Unit (System: English Rotation, Length: Centimeter)
		0x75, 0x04,        //   Report Size (4)
		0x95, 0x01,        //   Report Count (1)
		0x81, 0x42,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,Null State)
		0x65, 0x00,        //   Unit (None)
		0x05, 0x09,        //   Usage Page (Button)
		0x19, 0x01,        //   Usage Minimum (0x01)
		0x29, 0x0E,        //   Usage Maximum (0x0E)
		0x15, 0x00,        //   Logical Minimum (0)
		0x25, 0x01,        //   Logical Maximum (1)
		0x75, 0x01,        //   Report Size (1)
		0x95, 0x0E,        //   Report Count (14)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x06, 0x00, 0xFF,  //   Usage Page (Vendor Defined 0xFF00)
		0x09, 0x20,        //   Usage (0x20)
		0x75, 0x06,        //   Report Size (6)
		0x95, 0x01,        //   Report Count (1)
		0x15, 0x00,        //   Logical Minimum (0)
		0x25, 0x7F,        //   Logical Maximum (127)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x05, 0x01,        //   Usage Page (Generic Desktop Ctrls)
		0x09, 0x33,        //   Usage (Rx)
		0x09, 0x34,        //   Usage (Ry)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x02,        //   Report Count (2)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x06, 0x00, 0xFF,  //   Usage Page (Vendor Defined 0xFF00)
		0x09, 0x21,        //   Usage (0x21)
		0x95, 0x36,        //   Report Count (54)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x85, 0x05,        //   Report ID (5)
		0x09, 0x22,        //   Usage (0x22)
		0x95, 0x1F,        //   Report Count (31)
		0x91, 0x02,        //   Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0x04,        //   Report ID (4)
		0x09, 0x23,        //   Usage (0x23)
		0x95, 0x24,        //   Report Count (36)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0x02,        //   Report ID (2)
		0x09, 0x24,        //   Usage (0x24)
		0x95, 0x24,        //   Report Count (36)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0x08,        //   Report ID (8)
		0x09, 0x25,        //   Usage (0x25)
		0x95, 0x03,        //   Report Count (3)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0x10,        //   Report ID (16)
		0x09, 0x26,        //   Usage (0x26)
		0x95, 0x04,        //   Report Count (4)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0x11,        //   Report ID (17)
		0x09, 0x27,        //   Usage (0x27)
		0x95, 0x02,        //   Report Count (2)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0x12,        //   Report ID (18)
		0x06, 0x02, 0xFF,  //   Usage Page (Vendor Defined 0xFF02)
		0x09, 0x21,        //   Usage (0x21)
		0x95, 0x0F,        //   Report Count (15)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0x13,        //   Report ID (19)
		0x09, 0x22,        //   Usage (0x22)
		0x95, 0x16,        //   Report Count (22)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0x14,        //   Report ID (20)
		0x06, 0x05, 0xFF,  //   Usage Page (Vendor Defined 0xFF05)
		0x09, 0x20,        //   Usage (0x20)
		0x95, 0x10,        //   Report Count (16)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0x15,        //   Report ID (21)
		0x09, 0x21,        //   Usage (0x21)
		0x95, 0x2C,        //   Report Count (44)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x06, 0x80, 0xFF,  //   Usage Page (Vendor Defined 0xFF80)
		0x85, 0x80,        //   Report ID (-128)
		0x09, 0x20,        //   Usage (0x20)
		0x95, 0x06,        //   Report Count (6)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0x81,        //   Report ID (-127)
		0x09, 0x21,        //   Usage (0x21)
		0x95, 0x06,        //   Report Count (6)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0x82,        //   Report ID (-126)
		0x09, 0x22,        //   Usage (0x22)
		0x95, 0x05,        //   Report Count (5)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0x83,        //   Report ID (-125)
		0x09, 0x23,        //   Usage (0x23)
		0x95, 0x01,        //   Report Count (1)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0x84,        //   Report ID (-124)
		0x09, 0x24,        //   Usage (0x24)
		0x95, 0x04,        //   Report Count (4)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0x85,        //   Report ID (-123)
		0x09, 0x25,        //   Usage (0x25)
		0x95, 0x06,        //   Report Count (6)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0x86,        //   Report ID (-122)
		0x09, 0x26,        //   Usage (0x26)
		0x95, 0x06,        //   Report Count (6)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0x87,        //   Report ID (-121)
		0x09, 0x27,        //   Usage (0x27)
		0x95, 0x23,        //   Report Count (35)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0x88,        //   Report ID (-120)
		0x09, 0x28,        //   Usage (0x28)
		0x95, 0x3F,        //   Report Count (63)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0x89,        //   Report ID (-119)
		0x09, 0x29,        //   Usage (0x29)
		0x95, 0x02,        //   Report Count (2)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0x90,        //   Report ID (-112)
		0x09, 0x30,        //   Usage (0x30)
		0x95, 0x05,        //   Report Count (5)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0x91,        //   Report ID (-111)
		0x09, 0x31,        //   Usage (0x31)
		0x95, 0x03,        //   Report Count (3)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0x92,        //   Report ID (-110)
		0x09, 0x32,        //   Usage (0x32)
		0x95, 0x03,        //   Report Count (3)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0x93,        //   Report ID (-109)
		0x09, 0x33,        //   Usage (0x33)
		0x95, 0x0C,        //   Report Count (12)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0x94,        //   Report ID (-108)
		0x09, 0x34,        //   Usage (0x34)
		0x95, 0x3F,        //   Report Count (63)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0xA0,        //   Report ID (-96)
		0x09, 0x40,        //   Usage (0x40)
		0x95, 0x06,        //   Report Count (6)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0xA1,        //   Report ID (-95)
		0x09, 0x41,        //   Usage (0x41)
		0x95, 0x01,        //   Report Count (1)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0xA2,        //   Report ID (-94)
		0x09, 0x42,        //   Usage (0x42)
		0x95, 0x01,        //   Report Count (1)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0xA3,        //   Report ID (-93)
		0x09, 0x43,        //   Usage (0x43)
		0x95, 0x30,        //   Report Count (48)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0xA4,        //   Report ID (-92)
		0x09, 0x44,        //   Usage (0x44)
		0x95, 0x0D,        //   Report Count (13)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0xF0,        //   Report ID (-16)
		0x09, 0x47,        //   Usage (0x47)
		0x95, 0x3F,        //   Report Count (63)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0xF1,        //   Report ID (-15)
		0x09, 0x48,        //   Usage (0x48)
		0x95, 0x3F,        //   Report Count (63)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0xF2,        //   Report ID (-14)
		0x09, 0x49,        //   Usage (0x49)
		0x95, 0x0F,        //   Report Count (15)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0xA7,        //   Report ID (-89)
		0x09, 0x4A,        //   Usage (0x4A)
		0x95, 0x01,        //   Report Count (1)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0xA8,        //   Report ID (-88)
		0x09, 0x4B,        //   Usage (0x4B)
		0x95, 0x01,        //   Report Count (1)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0xA9,        //   Report ID (-87)
		0x09, 0x4C,        //   Usage (0x4C)
		0x95, 0x08,        //   Report Count (8)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0xAA,        //   Report ID (-86)
		0x09, 0x4E,        //   Usage (0x4E)
		0x95, 0x01,        //   Report Count (1)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0xAB,        //   Report ID (-85)
		0x09, 0x4F,        //   Usage (0x4F)
		0x95, 0x39,        //   Report Count (57)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0xAC,        //   Report ID (-84)
		0x09, 0x50,        //   Usage (0x50)
		0x95, 0x39,        //   Report Count (57)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0xAD,        //   Report ID (-83)
		0x09, 0x51,        //   Usage (0x51)
		0x95, 0x0B,        //   Report Count (11)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0xAE,        //   Report ID (-82)
		0x09, 0x52,        //   Usage (0x52)
		0x95, 0x01,        //   Report Count (1)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0xAF,        //   Report ID (-81)
		0x09, 0x53,        //   Usage (0x53)
		0x95, 0x02,        //   Report Count (2)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0xB0,        //   Report ID (-80)
		0x09, 0x54,        //   Usage (0x54)
		0x95, 0x3F,        //   Report Count (63)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0xE0,        //   Report ID (-32)
		0x09, 0x57,        //   Usage (0x57)
		0x95, 0x02,        //   Report Count (2)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0xB3,        //   Report ID (-77)
		0x09, 0x55,        //   Usage (0x55)
		0x95, 0x3F,        //   Report Count (63)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0xB4,        //   Report ID (-76)
		0x09, 0x55,        //   Usage (0x55)
		0x95, 0x3F,        //   Report Count (63)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0xB5,        //   Report ID (-75)
		0x09, 0x56,        //   Usage (0x56)
		0x95, 0x3F,        //   Report Count (63)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0xD0,        //   Report ID (-48)
		0x09, 0x58,        //   Usage (0x58)
		0x95, 0x3F,        //   Report Count (63)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0xD4,        //   Report ID (-44)
		0x09, 0x59,        //   Usage (0x59)
		0x95, 0x3F,        //   Report Count (63)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0xC0,              // End Collection
	};


	const uint8_t PS4_2[171] = {
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x05,        // Usage (Game Pad)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0x01,        //   Report ID (1)
		0x09, 0x30,        //   Usage (X)
		0x09, 0x31,        //   Usage (Y)
		0x09, 0x32,        //   Usage (Z)
		0x09, 0x35,        //   Usage (Rz)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x04,        //   Report Count (4)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x09, 0x39,        //   Usage (Hat switch)
		0x15, 0x00,        //   Logical Minimum (0)
		0x25, 0x07,        //   Logical Maximum (7)
		0x35, 0x00,        //   Physical Minimum (0)
		0x46, 0x3B, 0x01,  //   Physical Maximum (315)
		0x65, 0x14,        //   Unit (System: English Rotation, Length: Centimeter)
		0x75, 0x04,        //   Report Size (4)
		0x95, 0x01,        //   Report Count (1)
		0x81, 0x42,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,Null State)
		0x65, 0x00,        //   Unit (None)
		0x05, 0x09,        //   Usage Page (Button)
		0x19, 0x01,        //   Usage Minimum (0x01)
		0x29, 0x0E,        //   Usage Maximum (0x0E)
		0x15, 0x00,        //   Logical Minimum (0)
		0x25, 0x01,        //   Logical Maximum (1)
		0x75, 0x01,        //   Report Size (1)
		0x95, 0x0E,        //   Report Count (14)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x06, 0x00, 0xFF,  //   Usage Page (Vendor Defined 0xFF00)
		0x09, 0x20,        //   Usage (0x20)
		0x75, 0x06,        //   Report Size (6)
		0x95, 0x01,        //   Report Count (1)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x05, 0x01,        //   Usage Page (Generic Desktop Ctrls)
		0x09, 0x33,        //   Usage (Rx)
		0x09, 0x34,        //   Usage (Ry)
		0x15, 0x00,        //   Logical Minimum (0)
		0x26, 0xFF, 0x00,  //   Logical Maximum (255)
		0x75, 0x08,        //   Report Size (8)
		0x95, 0x02,        //   Report Count (2)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x06, 0x00, 0xFF,  //   Usage Page (Vendor Defined 0xFF00)
		0x09, 0x21,        //   Usage (0x21)
		0x95, 0x36,        //   Report Count (54)
		0x81, 0x02,        //   Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x85, 0x05,        //   Report ID (5)
		0x09, 0x22,        //   Usage (0x22)
		0x95, 0x1F,        //   Report Count (31)
		0x91, 0x02,        //   Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0x03,        //   Report ID (3)
		0x0A, 0x21, 0x27,  //   Usage (0x2721)
		0x95, 0x2F,        //   Report Count (47)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x06, 0x80, 0xFF,  //   Usage Page (Vendor Defined 0xFF80)
		0x85, 0xE0,        //   Report ID (-32)
		0x09, 0x57,        //   Usage (0x57)
		0x95, 0x02,        //   Report Count (2)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0xC0,              // End Collection
		0x06, 0xF0, 0xFF,  // Usage Page (Vendor Defined 0xFFF0)
		0x09, 0x40,        // Usage (0x40)
		0xA1, 0x01,        // Collection (Application)
		0x85, 0xF0,        //   Report ID (-16)
		0x09, 0x47,        //   Usage (0x47)
		0x95, 0x3F,        //   Report Count (63)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0xF1,        //   Report ID (-15)
		0x09, 0x48,        //   Usage (0x48)
		0x95, 0x3F,        //   Report Count (63)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0xF2,        //   Report ID (-14)
		0x09, 0x49,        //   Usage (0x49)
		0x95, 0x0F,        //   Report Count (15)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0x85, 0xF3,        //   Report ID (-13)
		0x0A, 0x01, 0x47,  //   Usage (0x4701)
		0x95, 0x07,        //   Report Count (7)
		0xB1, 0x02,        //   Feature (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0xC0,              // End Collection
	};


	const uint8_t X52_PRO_HOTAS[125] = {
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x04,        // Usage (Joystick)
		0xA1, 0x01,        // Collection (Application)
		0x09, 0x01,        //   Usage (Pointer)
		0xA1, 0x00,        //   Collection (Physical)
		0x09, 0x30,        //     Usage (X)
		0x09, 0x31,        //     Usage (Y)
		0x15, 0x00,        //     Logical Minimum (0)
		0x26, 0xFF, 0x03,  //     Logical Maximum (1023)
		0x75, 0x0A,        //     Report Size (10)
		0x95, 0x02,        //     Report Count (2)
		0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x75, 0x02,        //     Report Size (2)
		0x95, 0x01,        //     Report Count (1)
		0x81, 0x01,        //     Input (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x09, 0x35,        //     Usage (Rz)
		0x15, 0x00,        //     Logical Minimum (0)
		0x26, 0xFF, 0x03,  //     Logical Maximum (1023)
		0x75, 0x0A,        //     Report Size (10)
		0x95, 0x01,        //     Report Count (1)
		0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x09, 0x32,        //     Usage (Z)
		0x09, 0x33,        //     Usage (Rx)
		0x09, 0x34,        //     Usage (Ry)
		0x09, 0x36,        //     Usage (Slider)
		0x15, 0x00,        //     Logical Minimum (0)
		0x26, 0xFF, 0x00,  //     Logical Maximum (255)
		0x75, 0x08,        //     Report Size (8)
		0x95, 0x04,        //     Report Count (4)
		0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x05, 0x09,        //     Usage Page (Button)
		0x19, 0x01,        //     Usage Minimum (0x01)
		0x29, 0x27,        //     Usage Maximum (0x27)
		0x15, 0x00,        //     Logical Minimum (0)
		0x25, 0x01,        //     Logical Maximum (1)
		0x95, 0x27,        //     Report Count (39)
		0x75, 0x01,        //     Report Size (1)
		0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x75, 0x05,        //     Report Size (5)
		0x95, 0x01,        //     Report Count (1)
		0x81, 0x01,        //     Input (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x05, 0x01,        //     Usage Page (Generic Desktop Ctrls)
		0x09, 0x39,        //     Usage (Hat switch)
		0x15, 0x01,        //     Logical Minimum (1)
		0x25, 0x08,        //     Logical Maximum (8)
		0x35, 0x00,        //     Physical Minimum (0)
		0x46, 0x3B, 0x01,  //     Physical Maximum (315)
		0x66, 0x14, 0x00,  //     Unit (System: English Rotation, Length: Centimeter)
		0x75, 0x04,        //     Report Size (4)
		0x95, 0x01,        //     Report Count (1)
		0x81, 0x42,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,Null State)
		0x05, 0x05,        //     Usage Page (Game Ctrls)
		0x09, 0x24,        //     Usage (Move Right/Left)
		0x09, 0x26,        //     Usage (Move Up/Down)
		0x15, 0x00,        //     Logical Minimum (0)
		0x25, 0x0F,        //     Logical Maximum (15)
		0x75, 0x04,        //     Report Size (4)
		0x95, 0x02,        //     Report Count (2)
		0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              //   End Collection
		0xC0,              // End Collection
	};


	const uint8_t X52_HOTAS[119] = {
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x04,        // Usage (Joystick)
		0xA1, 0x01,        // Collection (Application)
		0x09, 0x01,        //   Usage (Pointer)
		0xA1, 0x00,        //   Collection (Physical)
		0x09, 0x30,        //     Usage (X)
		0x09, 0x31,        //     Usage (Y)
		0x15, 0x00,        //     Logical Minimum (0)
		0x26, 0xFF, 0x07,  //     Logical Maximum (2047)
		0x75, 0x0B,        //     Report Size (11)
		0x95, 0x02,        //     Report Count (2)
		0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x09, 0x35,        //     Usage (Rz)
		0x15, 0x00,        //     Logical Minimum (0)
		0x26, 0xFF, 0x03,  //     Logical Maximum (1023)
		0x75, 0x0A,        //     Report Size (10)
		0x95, 0x01,        //     Report Count (1)
		0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x09, 0x32,        //     Usage (Z)
		0x09, 0x33,        //     Usage (Rx)
		0x09, 0x34,        //     Usage (Ry)
		0x09, 0x36,        //     Usage (Slider)
		0x15, 0x00,        //     Logical Minimum (0)
		0x26, 0xFF, 0x00,  //     Logical Maximum (255)
		0x75, 0x08,        //     Report Size (8)
		0x95, 0x04,        //     Report Count (4)
		0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x05, 0x09,        //     Usage Page (Button)
		0x19, 0x01,        //     Usage Minimum (0x01)
		0x29, 0x22,        //     Usage Maximum (0x22)
		0x15, 0x00,        //     Logical Minimum (0)
		0x25, 0x01,        //     Logical Maximum (1)
		0x95, 0x22,        //     Report Count (34)
		0x75, 0x01,        //     Report Size (1)
		0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x75, 0x02,        //     Report Size (2)
		0x95, 0x01,        //     Report Count (1)
		0x81, 0x01,        //     Input (Const,Array,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x05, 0x01,        //     Usage Page (Generic Desktop Ctrls)
		0x09, 0x39,        //     Usage (Hat switch)
		0x15, 0x01,        //     Logical Minimum (1)
		0x25, 0x08,        //     Logical Maximum (8)
		0x35, 0x00,        //     Physical Minimum (0)
		0x46, 0x3B, 0x01,  //     Physical Maximum (315)
		0x66, 0x14, 0x00,  //     Unit (System: English Rotation, Length: Centimeter)
		0x75, 0x04,        //     Report Size (4)
		0x95, 0x01,        //     Report Count (1)
		0x81, 0x42,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,Null State)
		0x05, 0x05,        //     Usage Page (Game Ctrls)
		0x09, 0x24,        //     Usage (Move Right/Left)
		0x09, 0x26,        //     Usage (Move Up/Down)
		0x15, 0x00,        //     Logical Minimum (0)
		0x25, 0x0F,        //     Logical Maximum (15)
		0x75, 0x04,        //     Report Size (4)
		0x95, 0x02,        //     Report Count (2)
		0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC0,              //   End Collection
		0xC0,              // End Collection
	};


	const uint8_t SPEEDLINK_PHANTOM_HAWK[106] = {
		0x05, 0x01,        // Usage Page (Generic Desktop Ctrls)
		0x09, 0x04,        // Usage (Joystick)
		0xA1, 0x01,        // Collection (Application)
		0x09, 0x00,        //   Usage (Undefined)
		0xA1, 0x02,        //   Collection (Logical)
		0x09, 0x30,        //     Usage (X)
		0x15, 0x00,        //     Logical Minimum (0)
		0x25, 0xFF,        //     Logical Maximum (-1)    <- bug: this should be 26 ff 00
		0x35, 0x00,        //     Physical Minimum (0)
		0x45, 0xFF,        //     Physical Maximum (-1)   <- bug: this should be 46 ff 00
		0x65, 0x00,        //     Unit (None)
		0x55, 0x00,        //     Unit Exponent (0)
		0x75, 0x08,        //     Report Size (8)
		0x95, 0x01,        //     Report Count (1)
		0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x09, 0x31,        //     Usage (Y)
		0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x09, 0x32,        //     Usage (Z)
		0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x09, 0x32,        //     Usage (Z)
		0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x09, 0x35,        //     Usage (Rz)
		0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x09, 0x39,        //     Usage (Hat switch)
		0x25, 0x07,        //     Logical Maximum (7)
		0x46, 0x3B, 0x01,  //     Physical Maximum (315)
		0x65, 0x14,        //     Unit (System: English Rotation, Length: Centimeter)
		0x75, 0x04,        //     Report Size (4)
		0x81, 0x42,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,Null State)
		0x05, 0x09,        //     Usage Page (Button)
		0x19, 0x01,        //     Usage Minimum (0x01)
		0x29, 0x0C,        //     Usage Maximum (0x0C)
		0x25, 0x01,        //     Logical Maximum (1)
		0x45, 0x01,        //     Physical Maximum (1)
		0x65, 0x00,        //     Unit (None)
		0x75, 0x01,        //     Report Size (1)
		0x95, 0x0C,        //     Report Count (12)
		0x81, 0x02,        //     Input (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0x95, 0x08,        //     Report Count (8)
		0x81, 0x03,        //     Input (Const,Var,Abs,No Wrap,Linear,Preferred State,No Null Position)
		0xC1, 0x00,        //   End Collection
		0x06, 0x00, 0xFF,  //   Usage Page (Vendor Defined 0xFF00)
		0x09, 0x00,        //   Usage (0x00)
		0xA1, 0x02,        //   Collection (Logical)
		0x09, 0x02,        //     Usage (0x02)
		0x25, 0xFF,        //     Logical Maximum (-1)    <- bug: this should be 26 ff 00
		0x45, 0xFF,        //     Physical Maximum (-1)   <- bug: this should be 46 ff 00
		0x75, 0x08,        //     Report Size (8)
		0x95, 0x07,        //     Report Count (7)
		0x91, 0x02,        //     Output (Data,Var,Abs,No Wrap,Linear,Preferred State,No Null Position,Non-volatile)
		0xC1, 0x00,        //   End Collection
		0xC1, 0x00,        // End Collection
	};

} // namespace gamepad


} // namespace descriptor_samples
} // namespace hid
